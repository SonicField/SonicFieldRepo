CacheableFFT.0=FFT length must be power of 2
OffHeapFFT.0=Reusing a closed OffHeapFFT
OffHeapFFT.1=Closing a closed OffHeapFFT
SFFilterGenerator.10=raw alpha2    = %14.10f
SFFilterGenerator.11=warped alpha2 = %14.10f
SFFilterGenerator.12=dc     
SFFilterGenerator.13=centre 
SFFilterGenerator.14=hf     
SFFilterGenerator.15=gain at %1s$:   mag = %2$e
SFFilterGenerator.16=\ \ \ phase = %1$f pi
SFFilterGenerator.17=
SFFilterGenerator.18=S-plane zeros:
SFFilterGenerator.19=\tnone
SFFilterGenerator.20=\t%d$ times
SFFilterGenerator.21=\t%d$ times
SFFilterGenerator.22=
SFFilterGenerator.23=S-plane poles:\n
SFFilterGenerator.24=
SFFilterGenerator.25=
SFFilterGenerator.26=Z-plane zeros:
SFFilterGenerator.27=\t%d times\n
SFFilterGenerator.28=\t%d times\n
SFFilterGenerator.29=\t%d$ times\n
SFFilterGenerator.30=\t%d$ times\n
SFFilterGenerator.31=
SFFilterGenerator.32=Z-plane poles:
SFFilterGenerator.33=
SFFilterGenerator.34=
SFFilterGenerator.35=Recurrence relation:\n
SFFilterGenerator.36=y[n] = 
SFFilterGenerator.37=\ \ \ \ \ + 
SFFilterGenerator.38=(%3g * x[n-%2d])\n
SFFilterGenerator.39=
SFFilterGenerator.4=mkfilter: coeff of z
SFFilterGenerator.40=\ \ \ \ \ + (%14.10f * y[n-%2d])\n
SFFilterGenerator.41=
SFFilterGenerator.42=%1$f + j %1$f
SFFilterGenerator.5=d is not real; poles are not complex conjugates\n
SFFilterGenerator.6=mkfilter: bug in execute (
SFFilterGenerator.7=
SFFilterGenerator.8=raw alpha1    = %14.10f
SFFilterGenerator.9=warped alpha1 = %14.10f
