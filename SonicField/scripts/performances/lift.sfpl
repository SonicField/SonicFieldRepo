4 SetSwapLimit
"temp/input.wav" ReadFile ^left 
?left !right
{
(?signal,"A2" Note,5)ButterworthLowPass  Normalise !bass
(>signal,"A2" Note,5)ButterworthHighPass Normalise !signal

((?signal,500,2)RBJLowPass,50,50)Granulate !grains
1.5 !slower
Bunch !low
(
    ?grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((?grain,?time),>low)AddEnd !low
       ((?grain,(>time,(>grain length,?slower)/)+),>low)AddEnd !low
    }
)InvokeAll
Bunch !medium
(4,3)/ !slower
(
    ?grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((?grain,?time),>medium)AddEnd !medium
       ((?grain,(>time,(>grain length,?slower)/)+),>medium)AddEnd !medium
    }
)InvokeAll
(
    >low MixAt    Normalise dbs+3,
    >medium MixAt Normalise dbs+3,
    (>signal,2000,1)RBJLowPass Normalise,
    >bass 
)Mix Normalise !signal


(?signal,4000,2)ButterworthHighPass !high
(>high,0.5)Power !high
(
    >signal pcnt+75,
    (50 Silence, >high)Concatenate pcnt+25
)Mix Normalise !signal
(>signal,150,4,6)RBJPeaking !signal 
}!step-1

>left  !signal ?step-1 Do !left
>right !signal ?step-1 Do !right
>right Done !right
>left  Done !left

{
    (>pitch,((0.1,Random)*,0.95)+)* !pitch
    (?signal ,?pitch,0.5,36)RBJPeaking Normalise  !signal
    (?signal,?pitch,0.5,48)RBJPeaking Normalise  !signal
    (?signal,?pitch,0.5,48)RBJPeaking Normalise  !signal
    (?signal,?pitch,1.5,48)RBJPeaking Normalise  !signal
    
    (>f1,((0.2,Random)*,0.9)+)* !f1
    (>f2,((0.2,Random)*,0.9)+)* !f2
    (>f3,((0.2,Random)*,0.9)+)* !f3
    (?signal,?f1,0.5,48)RBJPeaking  Normalise  !signal1
    (?signal1,?f1,0.5,48)RBJPeaking Normalise  !signal1
    (?signal1,?f1,0.2,48)RBJPeaking Normalise  !signal1
    
    (?signal,?f2,1.0,48)RBJPeaking  Normalise  !signal2
    (?signal2,?f2,0.5,48)RBJPeaking Normalise  !signal2
    (?signal2,?f2,0.5,48)RBJPeaking Normalise  !signal2
    
    (?signal,?f3,0.5,48)RBJPeaking  Normalise  !signal3
    (?signal3,?f3,0.3,48)RBJPeaking Normalise  !signal3
    (?signal3,?f3,0.1,48)RBJPeaking Normalise  !signal3
    
    (>signal1,>signal2 dbs-6 ,>signal3 dbs-12)Mix Normalise !signal
    (?signal,?pitch,4,12)RBJPeaking Normalise  !signal

}!sing

[ A very desnse reflector
  Which splits the reflected wave form into smaller chunkcs
  reflects them and then recombines the results. This is
  very parallel.
]
{
    {
        (?sample,1000,5)ButterworthLowPass  SwapOut !sampleL
        (?sample,3000,2)ButterworthLowPass  SwapOut !sampleN
        (?sample,1000,4)ButterworthHighPass SwapOut !sampleH
        (>sampleH SwapIn,5000,2)ButterworthLowPass SwapOut !sampleH
        (?sample,((?first ,?offset)+ Prime Silence,(?sample,-13)Volume)Concatenate)Mix  SwapOut  !wet
        (
            1,2,
            {
                !z
                (>first,1.05)* Prime !first
                (>wet SwapIn,(((?first,30)-,?offset)- Silence,(?sampleL ReadIn,(-10,?z)-)Volume)Concatenate)Mix  SwapOut  !wet
                (>wet SwapIn,(((?first,30)+,?offset)- Silence,(?sampleN ReadIn,(-6, ?z)-)Volume)Concatenate)Mix  SwapOut  !wet
                (>wet Swapin,((?first      ,?offset)- Silence,(?sampleH ReadIn,(-10,?z)-)Volume)Concatenate)Mix  SwapOut  !wet
            }
        )Repeat
        (?sampleL SwapIn,1000,1)ButterworthLowPass SwapOut !sampleL
        (?sampleN SwapIn,1000,1)ButterworthLowPass SwapOut !sampleN
        (?sampleH SwapIn,2000,1)ButterworthLowPass SwapOut !sampleH
        (
            (0,0),
            ((?wet ReadIn Length,3)/,1),
            (?wet  ReadIn Length,0)
        )NumericShape !env
        (
            3,20,
            {
                !z 
                (?z,4)/ !z
                (>first,1.1)* Prime !first
                (>wet SwapIn,(((?first,30)-,?offset)- Silence,((?sampleL ReadIn,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
                (>wet SwapIn,(((?first,30)+,?offset)- Silence,((?sampleN ReadIn,(-4,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
                (>wet SwapIn,((?first      ,?offset)- Silence,((?sampleH ReadIn,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
            }
        )Repeat
        (
            20,40,
            {
                !z 
                (?z,6)/ !z
                (>first,1.025)* Prime !first
                (>wet SwapIn,(((?first,30)-,?offset)- Silence,(((?sampleL ReadIn,(-7,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
                (>wet SwapIn,(((?first,30)+,?offset)- Silence,(((?sampleN ReadIn,(-4,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
                (>wet SwapIn,((?first      ,?offset)- Silence,(((?sampleH ReadIn,(-7,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
            }
        )Repeat
        >wet
    } !reflector

    
    80   !first
    2500 !reflect-length
    
    bunch !swapped
    (
        (>signal,?reflect-length)Granulate,
        {
            ^signal ^time
            ((>signal Swapout,>time),>swapped)AddEnd !swapped
        }
    )InvokeAll
    
    bunch !results
    (
        >swapped,
        {
            ^signal ^time
            >signal SwapIn !signal
            (?signal,>signal Length Silence)Concatenate !signal
            0   !offset
            ?signal !sample
            ?reflector Do !left
            30  !offset
            ?signal !sample
            ?reflector Do !right
            >signal
            >sample
            ((>left ,>right ,?time),>results)AddEnd  !results
        }
    )InvokeAll
    
    Bunch !left-results  Swapout
    Bunch !right-results Swapout
    (
        >results,
        {
            Println
            ^left ^right ^time
            >left  Done Normalise  !left
            >right Done Normalise  !right
            ((>left  Swapin,?time),>left-results  Swapin)AddEnd SwapOut !left-results
            ((>right Swapin,?time),>right-results Swapin)AddEnd Swapout !right-results
        }
    )InvokeAll
    >left-results  SwapIn MixAt Normalise Swapout !left
    >right-results SwapIn MixAt Normalise Swapout !right
    (>left Swapin,>right Swapin)
}!do-reflector

 660 !f1
1800 !f2
2800 !f3
"c4" Note !Pitch
(
    ?sing Do Done pcnt+25,
    >signal pcnt+75
)Mix Normalise !signal !a

 80  !f1
1200 !f2
2800 !f3
"e4b" Note !Pitch
(
    ?sing Do Done pcnt+25,
    >signal pcnt+75
)Mix Normalise !signal !b

>signal Swapout !signal
(
    ?a dbs+12 Clip,
    >a dbs+12 Invert
)Mix Normalise !note-left 
?note-left swapout !note-left

(
    ?b dbs+12 Clip,
    >b dbs+12 Invert
)Mix Normalise !note-right
?note-right swapout !note-right

{
    (>input,250,250)Granulate !signal
    1 Silence !output Swapout
    (
        >signal,
        {
            ^grain ^time
            (>grain Normalise,1000 Silence)Concatenate !grain
            (>grain,(100,(4000,Random)*)+,0.1,48)RBJPeaking Normalise !grain
            (
                (>output Swapin,0)
                ,(>grain,>time)
            )MixAt SwapOut !output
        }
    )InvokeAll
    >output Normalise
}!resonate

>note-right swapin !input ?resonate Do !note-right
>note-left  swapin !input ?resonate Do !note-left
>note-right Done !note-right 
>note-left  Done !note-left

(
    1,4,
    {    
        !outer
        (
            1,8,
            {
                !t
                {((30,(?t,(24,?outer)*)*)+ Prime Silence,?note-left )Concatenate} Do !nlTask
                {((45,(?t,(15,?outer)*)*)+ Prime Silence,?note-right)Concatenate} Do !nrTask
            
                {((>nlTask Done, -15)Volume,(700,(?t,3)*)-,1)ButterworthLowPass}  Do  !nlTask
                {((>nrTask Done, -15)Volume,(700,(?t,3)*)-,1)ButterworthLowPass}  Do  !nrTask
            
                {(>nlTask Done, ?note-left )Mix Normalise}                        Do !nlTask 
                {(>nrTask Done, ?note-right)Mix Normalise}                        Do !nrTask
                
                ?nlTask Done !note-left
                ?nrTask Done !note-right
            }
        )Repeat
    }
)Repeat
?do-reflector Do Done ^left ^right  
(
    >note-left swapin
    >left
)Mix Normalise !left
(
    >note-right swapin
    >right
)Mix Normalise !right

(
    ( 
        >left  Normalise,
        >right Normalise 
    )StereoMonitor,"temp/tone.wav"
)WriteFile32
