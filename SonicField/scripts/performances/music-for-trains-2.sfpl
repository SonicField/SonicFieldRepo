 550 !frequency
{
    (>len,16)* !len
    (100,?frequency)SinWave MakeSawTooth !filter
    (>filter,?len,1)ButterworthLowPass   !filter
    ?len WhiteNoise !signal
    ((0,0),(250,0.25),((?len,0.5)*,  1),((?len,0.8)*,  1),(?len,0))NumericShape !sinEnv
    (>signal,?sinEnv)Multiply                  !signal
    (>signal,>filter)Convolve Normalise        !signal
    (>signal,2000,5)ButterworthLowPass         !signal
    (>signal,?frequency,2)ButterworthHighPass  !signal
    (>signal,?frequency,1)ButterworthLowPass   !signal
    (((0,0),((?len,0.75)*,1),(?len,0.5))NumericShape,(?len,2.5)SinWave)Multiply !vvib
    (1,>vvib pcnt+50)DirectMix                 !vvib
    (>signal,?vvib)Multiply Saturate Normalise !signal
    (>signal,0.6,0.5,?frequency Period)ResonantFilter Normalise !wave
    (
        -0.03,0.2,0,-1,0.2,2,
        ?wave
    )WaveShaper Normalise      !signal
    (>signal,?sinEnv)Multiply  !signal
    ((0,64),((?len,0.25)*,?frequency),(?len,64))NumericShape                      !lower
    ((0,?frequency),((?len,0.25)*,(?frequency,4)*),(?len,?frequency))NumericShape !upper
    (>signal,>lower,>upper,2)ShapedButterworthBandPass Normalise !signal
    
} !flute

(
    (10000, 1000 Prime)SinWave MakeTriangle,
    (10000, 1100 Prime)SinWave MakeTriangle 
)FrequencyModulate  !a

(
    (10000, 1050 Prime)SinWave  MakeTriangle,
    (10000, 1200 Prime)SinWave  MakeTriangle
)FrequencyModulate  !b

(
    (10000, 1070 Prime)SinWave  MakeTriangle,
    (10000, 1233 Prime)SinWave  MakeTriangle
)FrequencyModulate  !c

(
    (10000,  500 Prime )SinWave  MakeTriangle,
    (10000,  900 Prime )SinWave  MakeTriangle
)FrequencyModulate  !d

(>a,>b,>c,>d,10000 WhiteNoise)Mix Normalise !a 
(?a, 600,2000,2)ButterworthBandPass Saturate !a2
(>a,1500,6000,2)ButterworthBandPass !a1
(
    >a2,
    ((0,2000),(2000,512),(10000,32))NumericShape,
    ((0,0.2) ,(2000,0.8),(10000,0.2))NumericShape
)ShapedLadderLowPass !a2
   
((0,  0),( 5,1),(200,0.25),(500,0),(10000,  0))NumericShape !e1
((0,-90),(100,0),(10000,-90))SimpleShape !e2
(>a1,>e1)Multiply !a1
(>a2,>e2)Multiply !a2
(>a1,>a2)Mix Normalise !cymbal
(
    >cymbal,
    (
        (-12.0,60   Prime),
        (-16.0,70   Prime),
        (-18.0,90   Prime),
        (-20.0,119  Prime),
        (-22.0,300  Prime),
        (-22.0,400  Prime),
        (-21.0,512  Prime),
        (-22.0,1024 Prime)
    )
)MultipleResonantFilter Normalise !cymbal

{
    2000 WhiteNoise !signal
    (100,?frequency)SinWave MakeSquare Saturate !initial
    (((0,1),(100,0))NumericShape,>initial)Multiply !click
    ((0,0),(2,1),(500,0.2),(2000,0))NumericShape !dieDown
    ((0,0.2),(2000,0.5))NumericShape       !rEnv
    ((0,?frequency),(2000,32))NumericShape !fEnv
    (>signal,>dieDown)Multiply !signal 
    (>click,>signal)Mix WaveLimit !signal
    (
        (?signal,500,3)BesselLowPass,
        (
            (-18.0,20   Prime),
            (-10.0,30   Prime),
            (-12.0,100  Prime)
        )
    )MultipleResonantFilter Normalise !res
    (>signal,?frequency,1,48)RBJPeaking Normalise  !signal
    (>res,>signal)Mix WaveLimit Saturate Normalise !signal
    (?signal,?fEnv,?rEnv)ShapedLadderLowPass Normalise
} !BassishDrum

128 !frequency
?BassishDrum Do !bassish1

{
    ((?len,5)-,(random,10)*)+ !len
    ((0,0),((?len,2)/,  1),((?len,0.75)*,0.5),(?len,  0))NumericShape !vEnv
    ((0,0),((?len,4)/,0.8),((?len,0.75)*,0.5),(?len,0.0))NumericShape !rEnv
    (?len,?f)Sinwave MakeTriangle Saturate !s
    (>s,?vEnv)Multiply !s
    ((0,?f),((?len,4)/,(?f,8)*),((?len,3)/,(?f,4)*),(?len,(?f,0.25)*))NumericShape !fEnv
    (?s,?fEnv,?rEnv)ShapedLadderLowPass !s
    (>s,>vEnv)Multiply !signal
    (
        (1,(?signal Length,8)SinWave)DirectMix pcnt+2,
        >signal
    )Multiply !signal
    (?signal,(50,(50,Random)*)+)NumericVolume 
}!makeNote

{
    (
        (
            -0.03,0.2,0,-1,0.2,2,
            ?signal
        )WaveShaper pcnt+75,
        >signal pcnt+25
    )Mix Normalise !dry
    (
        ?dry,
        (
            (-12.0,60   Prime),
            (-16.0,70   Prime),
            (-18.0,90   Prime),
            (-20.0,119  Prime),
            (-22.0,300  Prime),
            (-22.0,400  Prime),
            (-21.0,512  Prime),
            (-22.0,1024 Prime)
        )
    )MultipleResonantFilter Normalise !wet

    (>wet,440,3)BesselLowPass !wetA
    (
        ?dry,
        (
            (-11.0,80   Prime),
            (-12.0,90   Prime),
            (-14.0,100  Prime)
        )
    )MultipleResonantFilter Normalise !wet
    (>wet,220,2)BesselLowPass  !wetB
    
    (>wetA pcnt+50,>wetB pcnt-75,>dry pcnt+25)Mix Normalise 
} !type1Resonate

 32   !root
2000  Silence !initial
1000  !at
1024  !nNotes
 512  !len
{
    bunch !notes
    (
        1,?nNotes,
        {
            !x
            ?x println
            (
                {
                    (1,(?x, 7)|)+ !a
                    (1,(?x,11)|)+ !b
                    ((?x, 3)|,2)* !c
                    (((1,?x)+, 3)|,2)* !d
                    (?root,?a)*   !fa        
                    (?root,?b)*   !fb
                    >fa !f ?makeNote Do !na
                    >fb !f ?makeNote Do !nb
                    (>na Normalise,?c)Volume           !signal
                    (>signal,>nb Normalise)Concatenate !signal
                    (1,(7,(?x,7)|)-)+   !a
                    (1,(11,(?x,11)|)-)+ !b
                    (?root,?a)*   !fa        
                    (?root,?b)*   !fb
                    >fa !f ?makeNote Do !na
                    >fb !f ?makeNote Do !nb
                    (>signal,(>na Normalise,?d)Volume)Concatenate     !signal
                    (>signal,>nb Normalise)Concatenate Normalise      !signal
                    
                    (>signal,(?len,2)* Silence)Concatenate Normalise  !signal
                    ?type1Resonate Do pcnt+33 !signal 
                    [ tail out clicks due to amplitude at end of signal ]
                    (
                        (
                            (0,1),
                            ((?signal Length,100)-,1),
                            (?signal Length,0)
                        )NumericShape,
                        >signal
                    )multiply !signal
                    
                    [ Drum beat ]
                    (
                        (?x,7)lt,
                        {1 Silence !drum},
                        {?bassish1 !drum}
                    )Choose Invoke
                    
                    (
                        ?isLeft,
                        {>drum pcnt+12 !drum},
                        {>drum pcnt-22  !drum}
                    )Choose Invoke
                    (>signal,>drum)Mix !signal  

                    [ Cymbal ]
                    (
                        ((?x,9)Gt,((?x,2)|,0)Eq)And,
                        {?cymbal   !drum},
                        {1 Silence !drum}
                    )Choose Invoke
                    
                    (
                        ?isLeft,
                        {>drum pcnt+2 pcnt+50 !drum},
                        {>drum pcnt+1 pcnt+50 !drum}
                    )Choose Invoke

                    (?drum,(0.2,(random,0.8)*)+)NumericVolume !drum
                    ((>signal,0),(>drum,?len))MixAt !signal  

                    [ Cymbal 2 ]
                    (
                        ((?x,11)Gt,((?x,2)|,1)Eq)And,
                        {(?cymbal,0.5)DirectRelength !drum},
                        {1 Silence !drum}
                    )Choose Invoke
                    
                    (
                        ?isLeft,
                        {>drum pcnt+2 pcnt+50 !drum},
                        {>drum pcnt+4 pcnt+50 !drum}
                    )Choose Invoke
                    
                    (?drum,(0.2,(random,0.8)*)+)NumericVolume !drum
                    ((>signal,0),(>drum,?len))MixAt !signal 


                    [ Flute ]
                    (
                        ((?x,12)Gt,((?x,4)|,1)Eq)And,
                        {?f !frequency ?flute Do !flute},
                        {1 Silence !flute}
                    )Choose Invoke
                    
                    (?flute,(0.2,(random,0.8)*)+)NumericVolume !flute
                    (>signal,>flute pcnt+48)Mix 
                    }Do,
                ?at
            ) !element
            (>at,(?len,4)*)+ !at
            (>element,>notes)AddEnd !notes
        }
    )repeat
    >notes MixAt Normalise !signal
} !makeTrack1
[>signal monitor]

true !isleft
?makeTrack1 Do !left
false !isleft
?makeTrack1 Do !right
 
((>left,>right)[StereoMonitor],"temp/track-1.wav")WriteFile32




