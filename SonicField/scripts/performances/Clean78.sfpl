"temp/input.wav" ReadFile Mix Normalise !signal

{
    ?signal Length !length
    Semitone       !step
    (>step,0.25)** !step
      480          !bands
       "C0" Note   !pitch
    bunch          !m-channels
    1.000          !enhance-channels
    0.0005         !gate
    1 Silence !output-signal 
    (>signal,2)DirectRelength !s-in
    (
        1,?bands,
        {
            ("Scanning channel ",?pitch)Println
            (?pitch,2)/  !p-use
            (?length,2)/ !l-use
            {
                (?s-in,  ?p-use,0.1,18)RBJPeaking dbs-18 WaveLimit !signal
                (?signal,?p-use,0.1,18)RBJPeaking dbs-18 WaveLimit !signal
                (?signal,?p-use,0.1,18)RBJPeaking dbs-18 WaveLimit !signal
                (?signal,?p-use,0.1,18)RBJPeaking dbs-18 WaveLimit !signal
                (?signal,?p-use,0.1,18)RBJPeaking dbs-18 WaveLimit !chan-sig
                (?p-use period,10)/                 !p
                (
                    {(?chan-sig,?p,?p)Follow pcnt+50}Do,
                    {(>chan-sig,?p,?p)Follow pcnt+50}Do
                )Mix WaveLimit              !chan-sig
                [ Now enhance it ]
                (>chan-sig,?enhance-channels)Power !chan-sig
                [ Now gate it]
                (
                    (
                        (?chan-sig,?gate)Gate,
                        12,
                        2
                    )ButterworthLowPass,
                    >chan-sig
                )Multiply
            }Do !chan-sig
            
            {    
                ("Regenerating channel ",?pitch)Println
                (?l-use,?p-use)SinWave !wave
                (
                    (?p-use,200)Lt,
                    {
                        (
                            (?l-use,(?p-use,2)/)SinWave Normalise pcnt+25,
                            (?l-use,(?p-use,4)/)SinWave Normalise pcnt+10,
                            >wave
                        )Mix !wave
                    },
                    {
                        [ Should add brightness to the louder bits ]
                        ?chan-sig MaxValue !max
                        (
                            (
                                ?wave MakeSawTooth pcnt+25,
                                (
                                    (
                                        ?chan-sig,
                                        (?chan-sig,0.005)Gate
                                    )Multiply,100,4
                                )ButterworthLowPass
                            )Multiply,
                            >wave
                        )Mix !wave
                    }
                )Choose Invoke
                >wave
            }Do !wave

            (
                >wave,
                ?chan-sig
            )Multiply !signal
                            
            >signal RemoveDc !signal 
            (>signal,(?p-use,2)*,1)BesselLowPass !signal
            (
                >signal,
                >output-signal
            )Mix RemoveDc !output-signal
            (>pitch,?step)* !pitch
        }
    )Repeat

    (>output-signal,0.5)DirectRelength
}!vocode

{
    (?signal,2000,8)BesselLowPass  !l
    (>signal,2000,8)BesselHighPass !h
    (>h Reverse,0.001)MaxDeviation Reverse !h 
    (>h,>l)Mix !signal Normalise
    (>signal,5000,1)ButterworthLowPass !signal
    (>signal,10000,6)ButterworthLowPass Normalise
}!pre-filter

{
    Bunch !out
    (
        (>signal,2500,25)Granulate,
        {
            ^grain ^time
            (?time,(Random,60)*)+ !time
            ((>grain,>time),>out)AddEnd !out
        }
    )InvokeAll
    >out MixAt Normalise
}!haas

{     
    (
        {(?signal Normalise,50,50)Follow},
        {(?signal Normalise Reverse,50,50)Follow Reverse}
    )DoAll Mix !shape
    
    (?shape,(1,?shape MaxValue)/)NumericVolume !shape
    (>shape,2)Power                       !shape
    (0.001,>shape)DirectMix               !shape
    (
        ?signal,
        >shape 
    )Divide
         
}!envelope-compress

{
    ("Compressing: ",?lower,"<",?upper)Println
    (?signal ,?lower, 4)BesselHighPass !signal
    (?signal ,?upper, 4)BesselLowPass  !signal
    ?envelope-compress Invoke
    (?signal ,?lower, 4)BesselHighPass !signal
    (?signal ,?upper, 4)BesselLowPass  !signal
}!compress-widen

{
    
    (   
        (?signal,10000,1)BesselHighPass,
        >signal
    )Mix Normalise !signal

    (
        (
            -0.03,0.2,0,-1,0.2,2,
            ?signal
        )WaveShaper pcnt+75,
        >signal pcnt+25
    )Mix Normalise !signal
    [?haas Do Done !signal]
    
    Bunch !sigs
    (
      1,14,
      {
        !band
        (?band,2)**      !bandl 
        ((>band,1)+,2)** !bandh 
        ((?bandl,100)*,75)-   !lower
        ((?bandh,100)*,75)-   !upper
        ?compress-widen Do !job
        (>job,>sigs)AddEnd !sigs
      }
    )Repeat

    (
        >sigs Mix Normalise
        >signal
    )Mix !compressed
    (>compressed,6000,2,)RBJPeaking Normalise !compressed
    (>compressed,1000,0.5,24)RBJHighShelf  Normalise

}!do-it 

?pre-filter Do Done !signal 
?vocode     Do Done !left !right

>left  !signal
?do-it Do !left
>right !signal
?do-it Do !right

((>left Done,>right Done)StereoMonitor,"temp/done.wav")WriteFile32
