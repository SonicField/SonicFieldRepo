{
    (?beat,4)/ !a
    (?beat,3)/ !d
    (?beat,2)/ !s
    ?beat      !r
    
    (
        (0,(?pitch,2)*),
        (?a,(20000,(?pitch,128)*)Min),
        (?d,(?pitch,32)*),
        (?s,(?pitch,4)*),
        (?r,(?pitch,2)*)
    )NumericShape !cuttoff-env
    
[    (
        (0,0.7),
        (?a,0.8),
        (?d,0.9),
        (?s,0.5),
        (?r,1.0)
    )NumericShape !resonance-env
]
 
    (
        (0, Random),
        (?a,Random),
        (?d,Random),
        (?s,Random),
        (?r,Random)
    )NumericShape !resonance-env
    
    (Random,0.1)+ !p
    (Random,0.1)+ !q
    (Random,0.1)+ !r
    (Random,0.1)+ !s    
    (
        (?cuttoff-env,?p)DirectRelength,
        (?cuttoff-env,?q)DirectRelength,
        (?cuttoff-env,?r)DirectRelength,
        (?cuttoff-env,?s)DirectRelength
    )Concatenate !cuttoff-env
    (
        (?resonance-env,?p)DirectRelength,
        (?resonance-env,?q)DirectRelength,
        (?resonance-env,?r)DirectRelength,
        (?resonance-env,?s)DirectRelength
    )Concatenate !resonance-env,

    ((?resonance-env Length,100)+,?pitch)SinWave !root
    ?root MakeSquare   !root-square
    ?root MakeSawTooth !root-saw

    (
        ?root-saw,
        ?root-square Invert
    )Mix Normalise !signal
    
    (0,?resonance-env Length,>signal)Cut !signal
    
    (>signal,(?pitch,4)*,1)DirectLowPass Normalise !signal
    
    (>signal,?cuttoff-env,?resonance-env)ShapedLadderFilter !signal 
    (>signal,?cuttoff-env,?resonance-env)ShapedLadderFilter !signal 
    
    
    ?signal Normalise Saturate Normalise ClipToSafe Normalise !signal
    
    (
        ((?signal,0.9, 0.1,(?pitch,7)* Period)ResonantFilter MakeSawtooth Normalise,?saw-cut,1)DirectLowPass,
        (?signal,0.99,0.01,(?pitch,5)* Period)ResonantFilter MakeTriangle Normalise,
        (?signal,0.99,0.01,(?pitch,2)* Period)ResonantFilter MakeTriangle Normalise,
        >signal dbs+9
    )Mix Normalise ClipToSafe
    
} !bass

600000 !total-length
(?total-length,(2,0.5)**)SinWave       !divisor
(?total-length,(3,0.5)**)SinWave       !dividend
(?total-length,(1.5,0.5)**)SinWave     !beater
(?total-length,(2,(1,3)/)**)SinWave    !stereo
(
    ?total-length,
    (
        (3,(1,3)/)**,
        ,2
    )/
)SinWave !volume
0 Silence !left !right
250  !beat-in
0.1 !rate

{
    (?x,?beat-in)* !x
    (?x,?rate)*    !y
    (1,(10,((?divisor,?y)ValueAt, 1)+)*)+ Integer !divisor-number
    (1,(10,((?dividend,?y)ValueAt,1)+)*)+ Integer !dividend-number
    (1,(1,((?beater  ,?x)ValueAt,1)+)*)+  Integer !beat 
    (0.5,(0.5,(?volume,?x)ValueAt)*)+             !volume-number 
    (?dividend-number,?divisor-number)/           !multiplier
    (?multiplier,32)*                             !pitch 
    (?pitch,(4,?beat)*)*                          !saw-cut
    (?beat-in,(?beat,2)*)*                        !beat
    (?bass Do Done,?volume-number)NumericVolume   !note
    
}!make-note
4 !space
(
    0,((?total-length,?beat-in)/,8)/,
    {
        !x
        (>x,8)* !x !z
        (
            ?make-note            Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do,
            (>x,1)+ !x ?make-note Do
        )DoneAll !notes
        (?z,?space)*   !z
        (?z,?beat-in)* !z
        (
            >notes,
            {
                !note 
                ("Note at ",?z)StrCat Println
                (0.5,(0.5,(?stereo,(?z,?space)/)ValueAt)*)+ !stereo-number 
                {
                    (
                        (>left,0),
                        ((?note,?stereo-number)NumericVolume,(?z,((Random,2)**,30)*)+)
                    )MixAt !left
                }Do !left-do
                {
                    (
                        (>right,0),
                        ((?note,(1,?stereo-number)-)NumericVolume,?z)
                    )MixAt !right
                }Do !right-do
                (>z,(?space,?beat-in)*)+ !z
                >left-do  Done !left
                >right-do Done !right
            }
        )InvokeAll
    }
)Repeat
(>left,12,2)DirectHighPass  !left
(>right,12,2)DirectHighPass !right

[clear some ram]
>divisor
>dividend
>beater
>stereo

(
    1,24,
    {
        !t
        {((30,(?t,10)*)+ Prime Silence,>left)Concatenate } Do !nlTask
        {((40,(?t,10)*)+ Prime Silence,>right)Concatenate} Do !nrTask
    
        {((?nlTask Done, -14)Volume,(2000,(?t,3)*)-,1)DirectLowPass} Do  !nlTask
        {((?nrTask Done, -14)Volume,(2000,(?t,3)*)-,1)DirectLowPass} Do  !nrTask
    
        {(?nlTask Done, >left) Mix Normalise} Do !nlTask 
        {(?nrTask Done, >right)Mix Normalise} Do !nrTask
        
        ?nlTask Done !left
        ?nrTask Done !right
    }
)Repeat


(1500 Silence,>left  ,1500 Silence)Concatenate !left
(1500 Silence,>right ,1500 Silence)Concatenate !right

((>left,>right),"temp/caverns-of-ganymede.wav")WriteFile32

