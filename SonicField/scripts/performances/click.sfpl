Æ’[ A very desnse reflector
  Which splits the reflected wave form into smaller chunkcs
  reflects them and then recombines the results. This is
  very parallel.
]
{
    {
        (?signal,1000,5)BesselLowPass        !signalL
        (?signal,3000,2)BesselLowPass        !signalN
        (?signal,1000,4)BesselLowPass        !signalH
        (?signal,((?first ,?offset)+ Prime Silence,(?signal,-13)Volume)Concatenate)Mix    !wet
        (
            1,5,
            {
                !z
                (?z,5)/ !z
                (>first,1.02)* Prime !first
                (>wet ,((0,((?first,15)-,?offset)-)Max Silence,(?signalL ,(-5,?z)-)Volume)Concatenate)Mix    !wet
                (>wet ,((0,((?first,15)+,?offset)-)Max Silence,(?signalN ,(-1, ?z)-)Volume)Concatenate)Mix    !wet
                (>wet ,((0,(?first      ,?offset)-)Max Silence,(?signalH ,(-1,?z)-)Volume)Concatenate)Mix    !wet
            }
        )Repeat
        (?signalL ,1000,1)BesselLowPass  !signalL
        (?signalN ,1000,1)BesselLowPass  !signalN
        (?signalH ,2000,1)BesselLowPass  !signalH
        (
            (0,0),
            ((?wet  Length,3)/,1),
            (?wet   Length,0)
        )NumericShape !env
        (
            6,40,
            {
                !z
                (?z,10)/ !z
                (>first,1.03)* Prime !first
                (>wet ,((0,((?first,15)-,?offset)-)Max Silence,((?signalL ,(-2,?z)-)Volume,?env)Multiply)Concatenate)Mix  !wet
                (>wet ,((0,((?first,15)+,?offset)-)Max Silence,((?signalN ,(-1,?z)-)Volume,?env)Multiply)Concatenate)Mix  !wet
                (>wet ,((0,(?first      ,?offset)-)Max Silence,((?signalH ,(-2,?z)-)Volume,?env)Multiply)Concatenate)Mix  !wet
            }
        )Repeat
        0.99 !l
        (
            40,120,
            {
                !z
                (?z,13)/ !z
                (>first,1.04)* Prime !first
                (>wet ,((0,((?first,15)-,?offset)-)Max Silence,(((?signalL ,( 2,?z)-)Volume,?env)Multiply,(Random,2000)*,1)BesselLowPass)Concatenate)Mix  !wet
                (>wet ,((0,((?first,15)+,?offset)-)Max Silence,(((?signalN ,( 1,?z)-)Volume,?env)Multiply,(Random,1000)*,1)BesselLowPass)Concatenate)Mix  !wet
                (>wet ,((0,(?first      ,?offset)-)Max Silence,(((?signalH ,(-2,?z)-)Volume,?env)Multiply,(Random,4000)*,1)BesselHighPass)Concatenate)Mix !wet
                (
                    ?wet     pcnt+1,
                    >signalL pcnt+99
                )Mix !signalL
                (
                    ?wet     pcnt+1,
                    >signalN pcnt+99
                )Mix !signalN
                (
                    ?wet     pcnt+1,
                    >signalH pcnt+99
                )Mix !signalH
            }
        )Repeat
        >wet
    } !reflector
    
    ?signal !dry
    bunch !dos
    (
        (>signal,?reflect-length)Granulate,
        {
            ^signal ^time
            ("Reverb at: ",?time)Println
            (?signal,>signal Length Silence)Concatenate !signal
            ?reflector Do !signal
            ((>signal,?time),>dos)AddEnd  !dos
        }
    )InvokeAll
    bunch !results
    (
        >dos,
        {
            ^signal ^time
            ((>signal Done,?time),>results)AddEnd  !results
        }
    )InvokeAll
    ("Monster Mix")Println
    >results MixAt !wet
    
    [ Make it waver ]
    [?waver Do !wet ]
    [ Make it very wet ]
    (
        >wet,
        >dry Invert
    )Mix Normalise !wet
        
}!stereo-plate

(1000 Silence, 100 WhiteNoise, 10050 Silence)Concatenate !left
(1050 Silence, 100 WhiteNoise, 10000 Silence)Concatenate !right

[ Simple attempt at true stereo reverb effect ]

>left  Normalise !left
>right Normalise !right
1000 !reflect-length
13   !first
0    !offset    
>left !signal
?stereo-plate Do !left
(?left Normalise,?signal normalise Invert)Mix !wetl

13 !first
10 !offset
>right !signal
?stereo-plate Do !right
(?right Normalise,?signal normalise Invert)Mix !wetr

((>left ,0),(?wetr pcnt-25 ,10))MixAt !left
((>right,0),(?wetl pcnt-25 ,10))MixAt !right
        
(>right,12,2)BesselHighPass          !right
(>left ,12,2)BesselHighPass          !left

>left  Normalise !left
>right Normalise !right
2500 !reflect-length
25   !first
10   !offset    
>left !signal
?stereo-plate Do !left

27 !first
 0 !offset
>right !signal
?stereo-plate Do !right

(>right,12,2)BesselHighPass          !right
(>left ,12,2)BesselHighPass          !left

(>left Normalise,>right Normalise)!out

"About to write" println
(>out StereoMonitor,"temp/done.wav")WriteFile32

