[ Turn un swapping at X Gig ]
2.0 SetSwapLimit

{
    (?pitch,8)/ !bass
    ((0,?bass),(?wide-point,?bass),(?narrow-point,(?pitch,?narrow-amount)*),(?length,(?pitch,0.95)*))NumericShape !low-shape
    ((0,1000) ,(?wide-point,1000) ,(?narrow-point,(?pitch,?narrow-amount)/),(?length,(?pitch,0.95)*))NumericShape !high-shape
    ?low-shape Length !length
    >low-shape  SwapOut !low-shape
    >high-shape SwapOut !high-shape
    (?length,100)+ !ll
    (
        (?ll,?pitch)SinWave MakeTriangle dbs+6,
        (?ll,(?pitch,2)/)SinWave MakeTriangle dbs-6,
        (?ll,(?pitch,4)/)SinWave MakeTriangle dbs-6,
        (?ll,(?pitch,8)/)SinWave MakeTriangle
    )Mix ErrorsToSilence Normalise !signal
    
    (>signal,15,2)DirectHighPass !signal
    (0,?length,>signal)Cut       !signal
    
    >high-shape SwapIn !high-shape
    >low-shape  SwapIn !low-shape
    (>signal,?low-shape,?high-shape,?order)ShapedBandPass ErrorsToSilence Normalise !signal
    (>signal,?low-shape,?high-shape,?order)ShapedBandPass ErrorsToSilence Normalise !signal
    (>signal,>low-shape,>high-shape,?order)ShapedBandPass ErrorsToSilence Normalise !signal
    ?signal Length  !length
    >signal SwapOut !signal
    
    (0,?length,(
        (?length,100)+,
        (?pitch,1.2)*
    )SinWave)Cut !mod
    (>mod,?modulation-index)Volume !mod

    (
        >signal SwapIn,
        >mod,
    )FrequencyModulate !signal 
    
    ((
        (?a,?b,?c,?d,?e)NumericShape,
        >signal
    )Multiply ErrorsToSilence Normalise,?over-drive)Volume Saturate ErrorsToSilence Normalise SwapOut !signal
    (?length,2000)/ !res-scale
    (
        (?signal ReadIn,4000 Silence)Concatenate,
        (
            (-14,((160,?pitch Period)+,?res-scale)* Prime),
            (-15,((190,?pitch Period)+,?res-scale)* Prime),
            (-14,((320,?pitch Period)+,?res-scale)* Prime),
            (-15,((355,?pitch Period)+,?res-scale)* Prime),
            (-17,((380,?pitch Period)+,?res-scale)* Prime)
        )
    ) DirectResonate ErrorsToSilence Normalise SwapOut !wet
    >signal SwapIn Invert              !signal
    (
        >wet SwapIn,
        ?signal
    )Mix ErrorsToSilence Normalise !wet
    (
        >signal,
        >wet
    )Mix ErrorsToSilence Normalise !signal
    
    (>signal,?post-cut-low,3 )DirectLowPass  ErrorsToSilence Normalise !signal
    (>signal,?post-cut-high,2)DirectHighPass ErrorsToSilence Normalise !signal Length !l
    (
        >signal ClipToSafe,
        ((0,0),(100,1),(?l,1))NumericShape
    )Multiply ErrorsToSilence Normalise
} !play-bell

{
    ?length WhiteNoise !signal
    (?pitch,0.8)* !plow  println
    (?pitch,0.8)/ !phigh println
    (>signal,?plow,?phigh,1)DirectBandPass Normalise !signal
    (>signal,?plow,?phigh,1)DirectBandPass Normalise ClipToSafe    
}!play-hiss

{
    (?beat,4)/ !a
    (?beat,3)/ !d
    (?beat,2)/ !s
    ?beat      !r
    
    ((?pitch,   2)*,20000)min !p0
    ((?pitch,   2)*,20000)min !p0a
    ((?pitch,  16)*,20000)min !p1
    ((?pitch,  16)*,20000)min !p1a
    ((?pitch, 0.5)*,20000)min !p2
    ((?pitch, 0.5)*,20000)min !p2a
    ((?pitch,   4)*,20000)min !p3
    ((?pitch,   4)*,20000)min !p3a
    ((?pitch,   2)*,20000)min !p4
    
    (
        (0, ?p0),
        ((?a,20)-,?p0a),
        (?a,?p1),
        ((?d,20)-,?p1a),
        (?d,?p2),
        ((?s,20)-,?p2a),
        (?s,?p3),
        ((?r,20)-,?p3a),
        (?r,?p4)
    )NumericShape !cuttoff-env
 
    (
        (0, (Random,0.5)**),
        (?a,(Random,0.5)**),
        (?d,(Random,0.5)**),
        (?s,(Random,0.5)**),
        (?r,(Random,0.5)**)
    )NumericShape !resonance-env
    
    (Random,0.1)+ !p
    (Random,0.1)+ !q
    (Random,0.1)+ !r
    (Random,0.1)+ !s    
    (
        (?cuttoff-env,?p)DirectRelength,
        (?cuttoff-env,?q)DirectRelength,
        (?cuttoff-env,?r)DirectRelength,
        (?cuttoff-env,?s)DirectRelength,
        (?cuttoff-env,?p)DirectRelength,
        (?cuttoff-env,?q)DirectRelength,
        (?cuttoff-env,?r)DirectRelength,
        (?cuttoff-env,?s)DirectRelength
    )Concatenate !cuttoff-env
    (
        (?resonance-env,?p)DirectRelength,
        (?resonance-env,?q)DirectRelength,
        (?resonance-env,?r)DirectRelength,
        (?resonance-env,?s)DirectRelength,
        (?resonance-env,?p)DirectRelength,
        (?resonance-env,?q)DirectRelength,
        (?resonance-env,?r)DirectRelength,
        (?resonance-env,?s)DirectRelength
    )Concatenate !resonance-env

    (?resonance-env Length,100)+ !length
    ?set-up-bell Invoke
    
    >resonance-env SwapOut !resonance-env
    >cuttoff-env   SwapOut !cuttoff-env 
    
    (?pitch,4)*    !pitch
    ?play-bell    Do Done SwapOut !bell-signal
    (?pitch,0.25)* !pitch
    [?play-strings Do Done SwapOut !string-signal]
    ?play-hiss     Do Done SwapOut !string-signal

    ((Random,2.999)* Truncate,2)/ !mix
    
    (
        (>bell-signal   SwapIn,?mix     )NumericVolume,
        (>string-signal SwapIn,(1,?mix)-)NumericVolume
    )Mix ErrorsToSilence Normalise !signal
    
    >resonance-env SwapIn !resonance-env
    >cuttoff-env   SwapIn !cuttoff-env 
    (0,?resonance-env Length,>signal)Cut !signal
    
    (>signal,?cuttoff-env,?resonance-env)ShapedLadderFilter !signal 
    (>signal,?cuttoff-env,?resonance-env)ShapedLadderFilter !signal 
    
    >resonance-env
    >cuttoff-env
    
    ?signal ErrorsToSilence Normalise Saturate ErrorsToSilence Normalise ClipToSafe ErrorsToSilence Normalise !signal
    
    (
        ((?signal,0.9, 0.1,(?pitch,7)* Period)ResonantFilter MakeSawtooth ErrorsToSilence Normalise,?saw-cut,1)DirectLowPass,
        (?signal,0.99,0.01,(?pitch,5)* Period)ResonantFilter MakeTriangle ErrorsToSilence Normalise,
        (?signal,0.99,0.01,(?pitch,2)* Period)ResonantFilter MakeTriangle ErrorsToSilence Normalise,
        >signal dbs+9
    )Mix ErrorsToSilence Normalise ClipToSafe !signal
    (?signal,>signal)Concatenate !signal
    (0,(1,(?signal Length,Random)*)+,>signal)Cut !signal
    (
        ((0,-20),((?signal Length,0.25)*,0),((?signal Length,0.75)*,0),(?signal Length,-60))SimpleShape,
        >signal
    )Multiply ErrorsToSilence Normalise ClipToSafe
      
} !bass

[ Parameterise ]
200000 !total-length
900    !beat-in
0.05  !rate
2      !dullness
36     !space
4      !beat-multi



(?total-length,(2,0.5)**,Random)PhasedSinWave       !divisor
(?total-length,(3,0.5)**,Random)PhasedSinWave       !dividend
(?total-length,(1.5,0.5)**,Random)PhasedSinWave     !beater
(?total-length,(2,(1,3)/)**,Random)PhasedSinWave    !stereo
(
    ?total-length,
    (
        (3,(1,3)/)**,
        ,2
    )/
)SinWave !volume

>divisor   SwapOut !divisor
>dividend  SwapOut !dividend
>beater    SwapOut !beater
>stereo    SwapOut !stereo
>volume    SwapOut !volume

0 Silence !left !right
{
    2                       !order
    (0.1,(Random,0.8)*)+    !narrow-amount
    (
        ?length,
        (0.25,(Random,0.75)*)+
    )*                      !d
    (
        ?d,
        (0.25,(Random,0.75)*)+
    )*                      !c
    (
        ?c,
        (0.25,(Random,0.5)*)+
    )*                      !b
    (
        ?b,
        (0.25,(Random,0.25)*)+
    )*                      !a
    (
        ?c,
        (0.1,Random)+
    )*                      !wide-point
    (
        ?c,
        (0.1,Random)+
    )*                      !narrow-point

    (?a,0)                  !a
    (?b,(500,Random)*)      !b
    (?c,(2,Random)*)        !c
    (?d,(1,Random)*)        !d
    (?length,0)             !e
    (?pitch,((7,Random)*,1)+)*  !post-cut-low
    15                      !post-cut-high
    (Random,18)*            !modulation-index   
    (Random,36)*            !over-drive
}!set-up-bell

{
    >divisor   ReadIn !divisor
    >dividend  ReadIn !dividend
    >beater    ReadIn !beater
    >volume    ReadIn !volume
    (?x,?beat-in)* !x
    (?x,?rate)*    !y
    (1,(10,((?divisor,?y)ValueAt, 1)+)*)+ Integer  !divisor-number
    (1,(10,((?dividend,?y)ValueAt,1)+)*)+ Integer  !dividend-number
    (1,(?beat-multi,((?beater  ,?x)ValueAt,1)+)*)+ Integer !beat 
    (0.5,(0.5,(?volume,?x)ValueAt)*)+              !volume-number 
    (?dividend-number,?divisor-number)/            !multiplier
    (?multiplier,?root)*                           !pitch 
    (?pitch,(4,?beat)*)*                           !saw-cut
    (?beat-in,(?beat,2)*)*                         !beat
    >divisor   
    >dividend 
    >beater    
    >volume 
    
    (?bass Do Done,?volume-number)NumericVolume   !note
    
}!make-note
{
    32 !root
    ?make-note Do Done
}!make-note-l
{
    512 !root
    ?make-note Do Done
}!make-note-h

3 !pa
(
    0,((?total-length,?beat-in)/,?pa)/ !of,
    {
        !x
        ("Computing note ",(?x,1)+," of ",(1,?of)+)Println 
        (>x,?pa)* !x !z
        >left  SwapOut !left
        >right SwapOut !right
        (
                       ?make-note-l Do,
            (>x,1)+ !x ?make-note-h Do,
            (>x,1)+ !x ?make-note-l Do,
            (>x,1)+ !x ?make-note-h Do
        )DoneAll !notes
        (?z,?space)*   !z
        (?z,?beat-in)* !z
        ?stereo ReadIn !stmp
        >left  SwapIn !left
        >right SwapIn !right
        (
            >notes,
            {
                !note 
                ("Note at ",?z)StrCat Println

                (0.5,(0.5,(?stmp,(?z,?space)/)ValueAt)*)+ !stereo-number 
                (?note,?stereo-number)NumericVolume       !note-left
                (?note,(1,?stereo-number)-)NumericVolume  !note-right

                [ Reverb ]

                (
                    ?note-left,
                    ?note-right
                )Mix Normalise !center
                ((Random,100)* Silence,>center)Concatenate !center
                (>center,Random)NumericVolume !center
                (
                    >note-left,
                    ?center
                )Mix !note-left    
                (
                    >note-right,
                    ?center
                )Mix !note-right    
                >center
                
                ?note-left  SwapOut !note-left-dry 
                ?note-right SwapOut !note-right-dry
                (20,(20,Random)*)+ !d
                (
                    1,1,
                    {    
                        !outer
                        (
                            1,24,
                            {
                                !t
                                {((30,(?t,(10,?outer)*)*)+ Prime Silence,?note-left )Concatenate}      Do !nlTask
                                {((?d,(?t,(10,?outer)*)*)+ Prime Silence,?note-right)Concatenate}      Do !nrTask
                            
                                {((>nlTask Done, -11)Volume,(2000,(?t,3)*)-,1)DirectLowPass} Do  !nlTask
                                {((>nrTask Done, -11)Volume,(2000,(?t,3)*)-,1)DirectLowPass} Do  !nrTask
                            
                                {(>nlTask Done, ?note-left )Mix Normalise}                   Do !nlTask 
                                {(>nrTask Done, ?note-right)Mix Normalise}                   Do !nrTask
                                
                                ?nlTask Done !note-left
                                ?nrTask Done !note-right
                            }
                        )Repeat
                    }
                )Repeat
                {
                    (>wet,12,2)DirectHighPass        !wet
                    (>wet,?dry Invert)Mix Normalise  !wet
                    ?wet Length  !wlen
                    >wet SwapOut !wet
                    (
                        (
                            ((0,Random),(?wlen,Random))NumericShape,
                            >wet SwapIn
                        )Multiply,
                        >dry Normalise dbs+3 saturate Normalise dbs-6 Normalise
                    )Mix Normalise
                } !place
                
                >note-left-dry SwapIn !dry
                >note-left            !wet
                ?place Do             !note-left
                >wet
                >dry
                
                >note-right-dry SwapIn !dry
                >note-right            !wet
                ?place Do              !note-right
                >wet
                >dry
                
                >note-left  Done !note-left
                >note-right Done !note-right
                
                {
                    (
                        (>left,0),
                        (>note-left ,(?z,((Random,2)**,30)*)+)
                    )MixAt !left
                }Do !left-do
                {
                    (
                        (>right,0),
                        (>note-right ,?z)
                    )MixAt !right
                }Do !right-do
                (>z,(?space,?beat-in)*)+ !z
                >left-do  Done !left
                >right-do Done !right
            }
        )InvokeAll
        ((?left Normalise,?right Normalise),"/Volumes/SpinningSamsung/temp/ice-of-triton-temp.wav")WriteFile32              
        >stmp
    }
)Repeat
(>left,12,2)DirectHighPass  !left
(>right,12,2)DirectHighPass !right

(1500 Silence,>left  Normalise ,1500 Silence)Concatenate !left
(1500 Silence,>right Normalise ,1500 Silence)Concatenate !right

((>left,>right),"temp/ice-of-triton.wav")WriteFile32

