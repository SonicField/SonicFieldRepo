[
    Aim: To build an entire piece of music from a single sin wave
]

{
    (?sample,1000,5)DirectLowPass  !sampleL
    (?sample,3000,2)DirectLowPass  !sampleN
    (?sample,1000,4)DirectHighPass !sampleH
    (>sampleH,5000,2)DirectLowPass !sampleH
    (?sample,((?first ,?offset)+ Prime Silence,(?sample,-13)Volume)Concatenate)Mix    !wet
    (
        1,2,
        {
            !z
            (>first,1.2)* Prime !first
            (>wet,(((?first,30)-,?offset)- Silence,(?sampleL,(-10,?z)-)Volume)Concatenate)Mix   !wet
            (>wet,(((?first,30)+,?offset)- Silence,(?sampleN,(-6, ?z)-)Volume)Concatenate)Mix   !wet
            (>wet,((?first      ,?offset)- Silence,(?sampleH,(-10,?z)-)Volume)Concatenate)Mix   !wet
        }
    )Repeat
    (?sampleL,1000,1)DirectLowPass  !sampleL
    (?sampleN,1000,1)DirectLowPass  !sampleN
    (?sampleH,2000,1)DirectLowPass  !sampleH
    (
        (0,0),
        ((?wet Length,3)/,1),
        (?wet Length,0)
    )NumericShape !env
    (
        3,20,
        {
            !z 
            (?z,2)/ !z
            (>first,1.1)* Prime !first
            (>wet,(((?first,30)-,?offset)- Silence,((?sampleL,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix    !wet
            (>wet,(((?first,30)+,?offset)- Silence,((?sampleN,(-4,?z)-)Volume,?env)Multiply)Concatenate)Mix    !wet
            (>wet,((?first      ,?offset)- Silence,((?sampleH,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix    !wet
        }
    )Repeat
    (
        20,80,
        {
            !z 
            (?z,3)/ !z
            (>first,1.05)* Prime !first
            (>wet,(((?first,30)-,?offset)- Silence,(((?sampleL,(-7,?z)-)Volume,?env)Multiply,500,2)DirectLowPass)Concatenate)Mix    !wet
            (>wet,(((?first,30)+,?offset)- Silence,(((?sampleN,(-4,?z)-)Volume,?env)Multiply,500,2)DirectLowPass)Concatenate)Mix    !wet
            (>wet,((?first      ,?offset)- Silence,(((?sampleH,(-7,?z)-)Volume,?env)Multiply,500,2)DirectLowPass)Concatenate)Mix    !wet
        }
    )Repeat
    >wet
} !reflector


{
    (?length,(?pitch,((Random,0.5)-,22)*)-,Random)PhasedSinWave !signal
    ?wave-shape Do Done !signal
    (((?length,500)/ WhiteNoise,2500,6)DirectLowPass,0.001)DirectRelength Normalise !multi
    (0,?signal Length,>multi)Cut  !multi
    (
        (1,>multi pcnt+1)DirectMix,
        >signal
    )Resample !signal
    (>signal,(?pitch,4)*,1)DirectLowPass Normalise
} !string

{ >signal MakeTriangle } !triangle-shape
{ >signal MakeSawTooth } !saw-tooth-shape

{
    ( 
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done }
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?triangle-shape  !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done },
        { ?saw-tooth-shape !wave-shape ?string Do Done }
    )DoAll Mix Normalise !base
    
    (
        (0,0),
        (1000,1),
        (?length,0)
    )NumericShape !main-envelope
    
    (   
        >base,
        ?main-envelope
    )Multiply !base
    
    [ Model resonance in strings ]
    (
        ?base,
        (
            (-15.0,(1200 Prime,?pitch)/),
            (-14.0,(1500 Prime,?pitch)/),
            (-14.0,(1800 Prime,?pitch)/),
            (-14.0,(2000 Prime,?pitch)/),
            (-13.0,(4000 Prime,?pitch)/)
        )
    ) DirectResonate  Normalise Saturate Normalise !base
    
    (>base,(?pitch,1)*,2)DirectLowPass !base
    ((?length WhiteNoise,500,6)DirectLowPass,0.001)DirectResample Normalise !multi
    (?length WhiteNoise,?pitch,3)DirectLowPass !hiss
    (
        (0.5,>multi pcnt+35)DirectMix,
        >base
    )Multiply Normalise  !base
    ((?length WhiteNoise,500,6)DirectLowPass,0.001)DirectResample Normalise !multi
    (
        (0.5,>multi pcnt+35)DirectMix,
        >hiss
    )Multiply Normalise  !hiss
    (   
        >hiss,
        ?main-envelope
    )Multiply !hiss
    (
        >base pcnt+60,
        ?hiss  pcnt+30
    )Mix Normalise !sample
    (
        (
            (0,1),
            ((?sample Length,100)-,1),
            (?sample Length,0)
        )NumericShape,
        >sample
    )Multiply !base
    
    (
        (1000,(?pitch,2)*)SinWave,
        (1000,(?pitch,4)*)SinWave  pcnt-50,
        (1000,(?pitch,6)*)SinWave pcnt+25,
        (1000,(?pitch,8)*)SinWave pcnt-10,
        (1000,(?pitch,10)*)SinWave pcnt+5,
        (1000,(?pitch,(2,PI)*)*)SinWave pcnt+30,
        (1000,(?pitch,(4,PI)*)*)SinWave pcnt-20,
        (1000,(?pitch,(6,PI)*)*)SinWave pcnt+10,
        (1000,(?pitch,(10,PI)*)*)SinWave pcnt-10,
        ((100 WhiteNoise pcnt-50,4)Power,(?pitch,8)*,4)DirectLowPass Normalise
    )Mix Normalise !plonk
    (
        (
            (0,0),
            (100,1),
            (500,0.8),
            (1000,0)
        )NumericShape,
        >plonk
    )Multiply !plonk
    150 !first
    0   !offset
    >plonk !sample
    ?reflector Do Done Normalise !plonk
    (
        (?plonk Length,10)SinWave,
        >plonk
    )Multiply !plonk
    
    (
        (>plonk pcnt+10,((?length,2)/,Random)*),
        (>base,0)
    )MixAt !sample
} !makeNote

  "a0" Note     !pitchBase
20000           !lengthBase
1 Silence !left
1 Silence !right
0 !pos
(
    1,128,
    {
        !x
        (((Random,(16,16)*)*,0.5)** Integer,?pitchBase)* !pitch
        (100,((?lengthBase,100)-,Random)*)+              !length
        ("Note   at ",?pos)StrCat    Println
        ("Pitch  at ",?pitch)StrCat  Println
        ("Length at ",?length)StrCat Println
        ("Count  of ",?x)StrCat      Println


        ?MakeNote Do Done                !tone
        (>tone,25,1)DirectHighPass       !tone
        Random           !leftVolume
        (1,?leftVolume)- !rightVolume
        (
            (>left,0),
            ((?tone,>leftVolume)NumericVolume,?pos)
        )MixAt                  !left
        (
            (>right,0),
            ((>tone,>rightVolume)NumericVolume,?pos)
        )MixAt                  !right
        (?pos,(15000,Random)*)+ !pos
    }
)
Repeat


>left  Normalise !left
>right Normalise !right
80 !first
0   !offset
>left !sample
?reflector Do !left
>right !sample
?reflector Do !right

(>left Done Normalise !left,>right Done Normalise !right)StereoMonitor
((2000 Silence,>left)Concatenate,(2000 Silence,>right)Concatenate)!bus
(?bus,"temp/generated.wav")WriteFile32
