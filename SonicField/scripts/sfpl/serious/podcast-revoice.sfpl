      1 SetSwapLimit
48000 SetSampleRate
false !truncate-silence
("Reading file ",Time)Println
"temp/input.wav" ReadFile ^signal
(>signal,10000,6)ButterWorthLowPass !signal

("Low pass Filtering ",Time)Println
(?signal,150,3)ButterworthLowPass  !lower
(?signal,150,3)ButterworthHighPass !upper
(>lower,60,2)ButterworthHighPass   !lower

("Initial Compression ",Time)Println
(?lower Normalise,100,100)Follow           !shape
(?shape,(1,?shape MaxValue)/)NumericVolume !shape
(0.1,>shape dbs+48)DirectMix               !shape
(
    >lower,
    >shape 
)Divide !lower

(
    >lower,
    >upper 
)Mix  Normalise !signal

[ De-ess ]
("De-ess ",Time)Println
(?signal,4000,5)ButterworthLowPass  !lower
(?signal,4000,5)ButterworthHighPass !upper
(?upper Normalise,100,100)Follow           !shape
(?shape,(1,?shape MaxValue)/)NumericVolume !shape
(0.1,>shape dbs+48)DirectMix               !shape
(
    >upper,
    >shape 
)Divide !upper

(
    >lower,
    >upper dbs+3
)Mix  Normalise !signal

{
    ("Envolope Compress ",Time)Println

    (
        (?signal Reverse,1,50)Follow Reverse,
        (?signal        ,1,50)Follow,
    )Mix !shape    
    (?shape,(2,?shape MaxValue)/)NumericVolume   !shape
    (0.04,>shape)DirectMix Clip                  !shape
    (>signal,?shape)Multiply Normalise           !signal
    
    (
        (?signal Normalise,25,25)Follow,
        (?signal Normalise Reverse,25,25)Follow Reverse,
    )Mix !shape
    (?shape,(1,?shape MaxValue)/)NumericVolume !shape
    (0.3,>shape dbs+24)DirectMix               !shape
    (
        >signal,
        >shape 
    )Divide Normalise !signal 
}!envelope-compress

{
    ("Granular compress",Time)Println
    (?signal,10,100)Granulate !grains
    Bunch !output
    (
        >grains,
        {
            ^grain ^time
            (                
                (?time,(?time,?grain length)+,?signal)Cut !sample
                (?grain Rectify MaxValue !v,?gate-point)Gt,
                {
                    (                    
                        (?v,?slam-point)Gt,
                        {
                            (>grain,(?slam-point,?v)/)NumericVolume !grain
                        },
                        {
                            [ Do nothing ]
                        }
                    )Choose Invoke
                }
                ,
                {
                    (>grain,(1,(?gate-point,?v)/)/)NumericVolume !grain
                }
            )Choose Invoke
            ((>grain,>time),>output)AddEnd !output
        }
    )InvokeAll
    >output MixAt Normalise !signal
    
}!compress
{
    0.02 !gate-point
    0.50 !slam-point
    [ Do in pairs to avoid running out of memory ]
    (
        (
            ?compress,
        )DoAll Mix ,
        (
            ?compress,
        )DoAll Mix ,
        (
            ?compress,
        )DoAll Mix ,
        (
            ?compress,
        )DoAll Mix  
    )Mix Normalise !signal
    [?compress invoke !signal]
}!granular-compress

?envelope-compress Invoke

("Bit of eq ",Time)Println
(>signal ,3000,2,6)RBJPeaking  Normalise  !signal
(>signal, 150,2,12)RBJPeaking  Normalise  !signal

(

    ?truncate-silence,
    {
        ("Truncate silence ",Time)Println
        (>signal,-24,100,100)TruncateSilence !signal
    },
    {
        ("Skipping silence truncate")Println
    }

)Choose Invoke

?granular-compress Invoke

("Final Filter",Time)Println
(>signal,10000,6)ButterWorthLowPass         !signal
(>signal ,4000,0.5,6)RBJHighShelf Normalise !signal

("Haas Effect",Time)Println
(15 Silence,?signal)Concatenate !note-left
?signal                         !note-right

(
    >note-left dbs-6,
    ?signal
)Mix Normalise !left
(
    >note-right dbs-6,
    >signal
)Mix Normalise !right

("Wave Limit",Time)Println
(0.15,>left)DirectMix  normalise dbs+9 WaveLimit !left
(0.15,>right)DirectMix normalise dbs+9 WaveLimit !right

("Output ",Time)Println
(
    (
        >left,
        >right
    ),"temp/output.wav"
)WriteFile32
