{
    (?sample,1000,5)ButterworthLowPass  SwapOut !sampleL
    (?sample,3000,2)ButterworthLowPass  SwapOut !sampleN
    (?sample,1000,4)ButterworthHighPass SwapOut !sampleH
    (>sampleH SwapIn,5000,2)ButterworthLowPass SwapOut !sampleH
    (?sample,((?first ,?offset)+ Prime Silence,(?sample,-13)Volume)Concatenate)Mix  SwapOut  !wet
    (
        1,2,
        {
            !z
            (>first,1.2)* Prime !first
            (>wet SwapIn,(((?first,30)-,?offset)- Silence,(?sampleL ReadIn,(-10,?z)-)Volume)Concatenate)Mix  SwapOut  !wet
            (>wet SwapIn,(((?first,30)+,?offset)- Silence,(?sampleN ReadIn,(-6, ?z)-)Volume)Concatenate)Mix  SwapOut  !wet
            (>wet Swapin,((?first      ,?offset)- Silence,(?sampleH ReadIn,(-10,?z)-)Volume)Concatenate)Mix  SwapOut  !wet
        }
    )Repeat
    (?sampleL SwapIn,1000,1)ButterworthLowPass SwapOut !sampleL
    (?sampleN SwapIn,1000,1)ButterworthLowPass SwapOut !sampleN
    (?sampleH SwapIn,2000,1)ButterworthLowPass SwapOut !sampleH
    (
        (0,0),
        ((?wet ReadIn Length,3)/,1),
        (?wet  ReadIn Length,0)
    )NumericShape !env
    (
        3,20,
        {
            !z 
            (?z,3)/ !z
            (>first,1.1)* Prime !first
            (>wet SwapIn,(((?first,30)-,?offset)- Silence,((?sampleL ReadIn,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
            (>wet SwapIn,(((?first,30)+,?offset)- Silence,((?sampleN ReadIn,(-4,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
            (>wet SwapIn,((?first      ,?offset)- Silence,((?sampleH ReadIn,(-7,?z)-)Volume,?env)Multiply)Concatenate)Mix SwapOut !wet
        }
    )Repeat
    (
        20,40,
        {
            !z 
            (?z,4)/ !z
            (>first,1.05)* Prime !first
            (>wet SwapIn,(((?first,30)-,?offset)- Silence,(((?sampleL ReadIn,(-7,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
            (>wet SwapIn,(((?first,30)+,?offset)- Silence,(((?sampleN ReadIn,(-4,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
            (>wet SwapIn,((?first      ,?offset)- Silence,(((?sampleH ReadIn,(-7,?z)-)Volume,?env)Multiply,500,2)ButterworthLowPass)Concatenate)Mix SwapOut !wet
        }
    )Repeat
    >wet SwapIn
} !reflector

{
    ?signal !new
    (
        1,50,
        {
            (((>new,0),(?signal pcnt+25,(100,Random)*))MixAt,(10,(500,Random)*)+)granulate !new
            Bunch !reflect
            (
                >new,
                {
                   ^grain ^time
                   ((>time,(50,Random)*)+)+ !time
                   (>grain,0.95)DirectRelength !grain
                   ((>grain,>time),>reflect)AddEnd !reflect 
                }
            )InvokeAll
            >reflect MixAt !new
            (>new,12,1)ButterworthHighPass Normalise !new
            (>new,1000,1)ButterworthLowPass Normalise !new
        }
    )Repeat
    >new Normalise !new
    (>new,>signal pcnt-25)Mix  Normalise
}!granular-reverb

"scripts/play/welcome.wav" ReadFile ^signal
(>signal,25)Granulate !grains
Bunch !low
(
    >grains,
    {
       ^grain ^time
       (>grain,0.5)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low 
    }
)InvokeAll
>low MixAt !welcome


"scripts/play/eat.wav" ReadFile ^signal
(>signal,25)Granulate !grains
Bunch !low
0.75 !slower
(
    ?grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.99)* !slower 
    }
)InvokeAll
>low MixAt !eat-left 
Bunch !low
0.75 !slower
(
    >grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.989)* !slower 
    }
)InvokeAll
>low MixAt !eat-right 

"scripts/play/die.wav" ReadFile ^signal
(>signal,25)Granulate !grains
Bunch !low
0.75 !slower
(
    ?grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.995)* !slower 
    }
)InvokeAll
>low MixAt !die-left 
Bunch !low
0.75 !slower
(
    >grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.996)* !slower 
    }
)InvokeAll
>low MixAt !die-right 


{
    >signal RoundOff !left
    ?left  SwapOut !left-dry
    (50 Silence,>left)Concatenate !left 
    (>left,0.75 ,0.25,50)ResonantFilter !left
    (>left,10,2,24)RBJPeaking  !left        
    (>left ,1000,4)BesselLowPass !left
    (
        (
            ?left-dry swapin Invert,
            >left
        )Mix pcnt+50,
        >left-dry pcnt+50
    )Mix swapout !left
    (>left  swapin,12,1)RBJHighPass Normalise !signal
}!tight-verb


50000 !length
((0,"B0b"Note),((?length,5000)-,"B1b" Note),(?length,"B1b" Note))Slide  !orig 
(2.1,((?length,5)SinWave,0.5)Volume)DirectMix !mod
(>mod,2)Power !mod

{
    (?orig,?mod)ShapedPower Normalise !signal 
    (2.1,((?length,?second)SinWave,0.5)Volume)DirectMix !mod
    (>mod,2)Power !mod
    (?signal,?mod)ShapedPower Normalise Saturate Normalise !signal
    (
        ((0,0),((?length,5000)-,0),(?length,24))SimpleShape,
        >signal
    )Multiply Saturate Normalise 
} !init

7.55 !second ?init Do !left
7.45 !second ?init Do !right

3000 !length
{
    (?length,?pitch)SinWave dbs+3 Saturate Normalise !orig
    ((0,1 ToDbs),(1000,1 ToDbs),(?length,0.25 ToDbs))SimpleShape !mod
    (?orig,?mod)ShapedPower Normalise !signal
    (
        ((0,0),(?signal Length,-6))SimpleShape,
        >signal
    )Multiply Normalise
}!dauw

"E2b" Note !pitch ?dauw Do !a
"B3b" Note !pitch ?dauw Do !b
"G3"  Note !pitch ?dauw Do !c
(>a,>b,>c)DoneAll Mix Normalise ClipToSafe !signal
?tight-verb Do !do-a

6000 !length
"B2b" Note !pitch ?dauw Do !a
"D2" Note  !pitch ?dauw Do !b
"F2"  Note !pitch ?dauw Do !c
"A3"  Note !pitch ?dauw Do !d
"C3"  Note !pitch ?dauw Do !e
(>a,>b,>c,>d,>e)DoneAll Mix Normalise dbs+12 Saturate Normalise ClipToSafe !signal
?tight-verb Do !do-b

?do-a Done RoundOff !signal-a
?do-b Done RoundOff !signal-b

(1000,"E1b" Note)SinWave MakeSawTooth Normalise !signal
(>signal,"e3b" Note,12)RBJLowPass     Normalise !signal
(
    (?signal,0.95,0.10,"e3b" Note Period)ResonantFilter Normalise,
    ?signal
)Multiply  Normalise dbs+36 clip !signal
(>signal,6000,8,24)RBJPeaking Normalise !signal
?tight-verb Do !signal-c-l

(
    (?signal,0.95,0.10,"b3b" Note Period)ResonantFilter Normalise,
    >signal
)Multiply  Normalise dbs+36 clip !signal
(>signal,6000,8,24)RBJPeaking Normalise !signal
?tight-verb Do !signal-c-r

>left  Done !left  !left-init
>right Done !right !right-init
?signal-c-r Done RoundOff !signal-c-r
?signal-c-l Done RoundOff !signal-c-l

(5000,"b2b" Note)SinWave MakeSawTooth Normalise !signal
(>signal,"b4b" Note,12)RBJLowPass     Normalise !signal
(
    (?signal,0.95,0.10,"e4b" Note Period)ResonantFilter Normalise,
    ?signal
)Multiply  Normalise dbs+36 clip !signal
(>signal,6000,8,24)RBJPeaking Normalise !signal
?tight-verb Do Done !end

(>end,25)Granulate !grains
Bunch !low
0.75 !slower
(
    ?grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.99)* !slower 
    }
)InvokeAll
>low MixAt !end-left 
Bunch !low
0.75 !slower
(
    >grains,
    {
       ^grain ^time
       (>grain,?slower)DirectRelength !grain
       ((>grain,>time),>low)AddEnd !low
       (>slower,0.989)* !slower 
    }
)InvokeAll
>low MixAt !end-right 

(>end-right,0.5)Power dbs+6 !end-right
(>end-left ,0.5)Power dbs+6 !end-left

>signal-a dbs+6 !signal-a
>signal-b dbs+6 !signal-b

(
    (>left ClipToSafe       ,                   0),
    (?signal-a,                              1000),
    (?signal-a,                              5000),
    (?signal-a,                              9000),
    (?signal-b,                             13000),
    (?signal-c-l      ,                     20000),
    ((0,500,?signal-c-r)Cut RoundOff      , 21000),
    ((0,400,?signal-c-r)Cut RoundOff ,      22000),
    ((0,1900,?signal-b)Cut  RoundOff ,      23000),
    (?signal-c-l      ,                     26000),
    ((0,500,?signal-c-r)Cut RoundOff      , 27000),
    ((0,400,?signal-c-r)Cut RoundOff ,      28000),
    ((0,1900,?signal-b)Cut  RoundOff ,      29000),
    (?signal-c-l       ,                    33000),
    ((0,500,?signal-c-l)Cut RoundOff      , 34000),
    ((0,400,?signal-c-l)Cut RoundOff      , 35000),
    ((0,1900,?signal-b)Cut  RoundOff ,      36000),
    (?signal-c-r       ,                    39000),
    ((0,500,?signal-c-l)Cut RoundOff      , 40000),
    ((0,400,?signal-c-l)Cut RoundOff       ,41000),
    ((0,1900,?signal-b)Cut  RoundOff ,      42000),
    (>end-left,                             52000)
    

)MixAt Normalise !left
(
    (>right ClipToSafe       ,                  0),
    (?signal-a,                              1050),
    (?signal-a,                              5030),
    (?signal-a,                              9050),
    (?signal-b,                             12950),
    (?signal-c-r      ,                     20000),
    ((0,500,?signal-c-l)Cut RoundOff      , 21000),
    ((0,400,?signal-c-l)Cut RoundOff       ,22000),
    ((0,1900,?signal-b)Cut  RoundOff ,      23000),
    (?signal-c-r      ,                     26000),
    ((0,500,?signal-c-l)Cut RoundOff      , 27000),
    ((0,400,?signal-c-l)Cut RoundOff       ,28000),
    ((0,1900,?signal-b)Cut  RoundOff ,      29000),
    (?signal-c-l       ,                    33000),
    ((0,500,?signal-c-l)Cut RoundOff      , 34000),
    ((0,400,?signal-c-l)Cut RoundOff      , 35000),
    ((0,1900,?signal-b)Cut  RoundOff ,      36000),
    (?signal-c-r       ,                    39000),
    ((0,500,?signal-c-l)Cut RoundOff      , 40000),
    ((0,400,?signal-c-l)Cut RoundOff       ,41000),
    ((0,1900,?signal-b)Cut  RoundOff ,      42000),
    (>end-right,                            52000)
        
)MixAt Normalise !right

{
    (>signal,32,1)RBJHighPass Normalise !signal
    ?signal !excite
    >excite Rectify Normalise !excite
    >excite Rectify Normalise !excite
    >excite Rectify Normalise !excite
    >excite Rectify Normalise !excite
    (
        >signal pcnt+50,
        >excite pcnt+50
    )Mix Normalise !signal
    
    (
        -0.03,
         0.2,
        0,
        -1,
        0.2,
        2,
        >signal
    )WaveShaper Normalise !signal
    (
        -0.03,
        0.2,
        -0.2,
        -1,
        0.5,
        2,
        >signal
    )WaveShaper Normalise !signal
    (>signal,32,1)RBJHighPass Normalise !signal
} !boost
>Left  !signal ?boost Do !left
>right !signal ?boost Do !right
>right Done !right
>left  Done !left
(
    (>left,0),
    (?eat-left,33500),
    (?die-left,46000)
)MixAt !left
(
    (>right,0),
    (?eat-right,33500),
    (?die-right,46000)
)MixAt !right

(?welcome dbs-6,>left)Concatenate  !signal ?granular-reverb Do !left
(>welcome dbs-6,>right)Concatenate !signal ?granular-reverb Do !right

>left Done Normalise dbs+12 Saturate Normalise   RoundOff !left
>right Done  Normalise dbs+12 Saturate Normalise RoundOff !right

80 !first
30 !offset
?left !sample
?reflector Do !leftw
?right !sample
?reflector Do !rightw

(
    (
        (>leftw  Done Normalise,>left  Normalise)Mix  Normalise,
        (>rightw Done Normalise,>right Normalise)Mix Normalise
    ),"temp/tone.wav"
)WriteFile32
