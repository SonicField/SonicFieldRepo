sf.SetSampleRate(96000)
if not 'random' in dir():
    import random
    random.seed(System.currentTimeMillis())

def bandRand(min,max):
    min=float(min)
    max=float(max)
    r1=random.random()
    r2=random.random()
    r=float(r1+r2)*0.5
    r=r*(max-min)
    r=r+min
    return r

def chorus(
    left,
    right,
    minDepth = 10.0,
    maxDepth = 50.0,
    maxRate  =  0.1,
    minRate  =  0.05,
    nChorus  =  4.0,
    minVol   =  0.7,
    maxVol   =  1.0):    
    def inner(signal_):
        def inner_():
            signal=sf.Clean(signal_)
            sigs=[]
            l=sf.Length(+signal)
            for inst in range(0,nChorus):
                def in_inner():
                    print "Do"
                    lfo=sf.PhasedSineWave(l,bandRand(minRate,maxRate),random.random())
                    lfo=sf.NumericVolume(lfo,bandRand(minDepth,maxDepth))
                    nsg=sf.TimeShift(+signal,lfo)
                    lfo=sf.PhasedSineWave(l,bandRand(minRate,maxRate),random.random())
                    lfo=sf.NumericVolume(lfo,bandRand(minVol,maxVol))
                    lfo=sf.DirectMix(1,lfo)
                    nsg=sf.Multiply(lfo,nsg)
                    print "Done"
                    return sf.Finalise(nsg)
                sigs.append(sf_do(in_inner))
            ret=sf.Finalise(sf.Mix(sigs))
            -signal
            return ret
        return sf_do(inner_)
    
    return inner(left),inner(right)
    
(left,right)=sf.ReadFile("temp/dog.wav")
#left  = sf.RBJHighPass(left ,4000,2)
#right = sf.RBJHighPass(right,4000,2)

left1,right1=chorus(
    left,
    right,
    minDepth =  0.0,
    maxDepth = 10.0,
    minVol   =  1.0,
    maxVol   =  1.0,
    nChorus  =  9.0)
    
left2,right2=chorus(
    +left1,
    +right1,
    minDepth = 10.0,
    maxDepth = 50.0,
    maxRate  =  0.1,
    minRate  =  0.05,
    nChorus  =  4.0,
    minVol   =  0.7,
    maxVol   =  1.0)

left  = sf.Mix(left1 ,left2)
right = sf.Mix(right1,right2)
left  = sf.Finalise(sf.RBJPeaking(left ,64,1,8))
right = sf.Finalise(sf.RBJPeaking(right,64,1,8))

sf.WriteFile32((left,right),"temp/c.wav")