###############################################################################
#
# Voices
#
###############################################################################

def voxCelest_inner(length,freq,a,b,c):
    vox=sf.Mix(
        sf.Pcnt75(singBase(length,freq,1.0)),
        sf.Pcnt25(singBase(length,freq*2.0,1.25))
    )
    vox=sf.FixSize(polish(vox,freq)) 
    ev=sf.Pcnt20(sf.SineWave(length,4.5))
    ev=sf.Multiply(
        ev,
        sf.NumericShape((0,0),(length*0.5,1),(length,1))
    )
    fv=sf.Pcnt12(+ev)
    ev=sf.DirectMix(1.0,ev)
    vox=sf.FrequencyModulate(vox,fv)
    vox=sf.Multiply(ev,vox)
    vox=doFormant(vox,a,b,c,freq)
    vox=excite(vox,0.2,2.0)
    vox=sf.Mix(
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-28),(128,-40),(length,-40))
        ),
        vox
    )
    vox=sf.RBJPeaking(vox,freq,3,4)
    vox=polish(vox,freq)
    return sf.FixSize(vox)

def voxCelestAlto(length,freq):
    return voxCelest_inner(length,freq,470,1150,2100)

def voxCelestSoprano(length,freq):
    return voxCelest_inner(length,freq,850,1200,2800)

def celestFlute(length,freq):
    sig=sf.Mix(
        sf.Pcnt50(sweetFluteBase(length,freq)),
        sf.Pcnt50(sweetFluteBase(length,freq+1.0)),
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-28),(128,-40),(length,-40))
        )
    )
    return pitchMove(sig)

def sweetFlute(length,freq):
    sig=sf.Mix(
        sweetFluteBase(length,freq),
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-30),(128,-40),(length,-40))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def trostBrightFlute(length,freq):
    sig  = brightFluteBase(length,freq)
    wind = sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-20))
    )
    sig  = sf.Multiply(
        sf.NumericShape((0,0),(32,1),(length,1)),
        sig
    )
    start=sf.Multiply(
            sf.Mix(
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.500)),2.0)),
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.123)),2.0))
            ),
            sf.NumericShape((0,3.0),(32,0),(length,0))            
    )
    start=polish(start,freq*0.5)
    sig=sf.Mix(sig,start,wind)
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def trostSweetFlute(length,freq):
    sig  = sweetFluteBase(length,freq)
    wind = sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-20))
    )
    sig  = sf.Multiply(
        sf.NumericShape((0,0),(32,1),(length,1)),
        sig
    )
    start=sf.Multiply(
            sf.Mix(
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.500)),2.0)),
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.123)),2.0))
            ),
            sf.NumericShape((0,3.0),(32,0),(length,0))            
    )
    start=polish(start,freq*0.5)
    sig=sf.Mix(sig,start,wind)
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def brightFlute(length,freq):
    sig=sf.Mix(
        brightFluteBase(length,freq),
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-28),(128,-40),(length,-40))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def string(length,freq):
    def ms():
        sig=sf.Mix(
            sf.Pcnt45(sf.MakeTriangle(sf.PhasedSineWave(length,freq,random.random()))),
            sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*2.0,random.random()))),
            sf.Pcnt15(sf.MakeTriangle(sf.PhasedSineWave(length,freq*4.0,random.random()))),
            sf.Pcnt15(sf.PhasedSineWave(length,freq*6.0,random.random())),
            sf.Multiply(
                cleanNoise(length,freq),
                sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
            )
        )
        sig=polish(sig,freq)
        sig=sf.FixSize(polish(sf.Saturate(sig),freq))
        return pitchMove(sig)
        
    return sf.FixSize(sf.Mix(ms(),ms()))

def viola(length,freq):
    sig=sf.Mix(
        violaBase(length,freq),
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def pluckedGlass(length,freq):
    sig=sf.Mix(        
            sf.Pcnt50(stretchedBass(length,freq,z=3.5,s=1.005,d=1.00,at=3000)),
            sf.Pcnt50(stretchedBass(length,freq,z=3.5,s=1.005, d=1.00,at=1500))
        )
    sig=sf.Multiply(
        sig,
        sf.NumericShape((0,0.5),(16,1),(length,1))
    )
    sig=sf.BesselLowPass(sig,freq*5,1)
    sig=sf.Multiply(
        sig,
        sf.DirectMix(1,sf.Pcnt5(sf.SineWave(length,16+random.random()*8.0)))
    )
    sig=sf.RBJPeaking(sig,freq*5,0.5,5)
    
    start=sf.Multiply(
            sf.Mix(
                sf.FixSize(sf.MakeSawTooth(sf.SineWave(length,120))),
                sf.FixSize(sf.MakeSawTooth(sf.SineWave(length,freq*0.75))),
                sf.FixSize(sf.MakeSawTooth(sf.SineWave(length,freq**0.5)))
            ),
            sf.SimpleShape((0,1.0),(16,-30),(32,-60),(length,-99))            
    )
    start=sf.Multiply(
        start,
        sf.NumericShape((0,0),(16,1),(length,0),(length*0.5,0))
    )            
    start=sf.Clean(start)
    conv =cleanNoise(64,32)
    conv =sf.Multiply(
        sf.SimpleShape((0,-12),(60,-60),(66,-60)),
        conv
    )
    conv=sf.Multiply(
        conv,
        sf.NumericShape((0,0),(60,1),(66,0))
    ) 
    conv=reverberate(start,conv)
    conv=sf.Multiply(
        conv,
        sf.SimpleShape((0,1.0),(16,-30),(32,-60),(length,-99))
    )
    sig=sf.Mix(sf.FixSize(sig),sf.Pcnt50(sf.FixSize(conv)))
    sig=sf.Cut(0,length,sig)
    return sf.FixSize(polish(sig,64))
    
def brightPluckedGlass(length,freq):
    sig=sf.Mix(
        stretchedBass(length,freq,z=1.5,s=1.02,d=1.0,at=4000),
        sf.Multiply(
            cleanNoise(length,freq*2.0),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )
    sig=sf.RBJPeaking(sig,freq*5,0.5,5)
    start=sf.Multiply(
            sf.Mix(
                sf.FixSize(sf.MakeSawTooth(sf.SineWave(length,freq*0.75))),
                sf.FixSize(sf.MakeSawTooth(sf.SineWave(length,freq**0.5)))
            ),
            sf.SimpleShape((0,1.0),(16,-30),(16,-60),(length,-99))            
    )
    start=sf.Clean(start)
    sig=sf.Mix(sf.FixSize(sig),sf.FixSize(start))
    return sf.FixSize(sf.Clean(sig))

def trostLeadDiapason(length,freq):
    sig=sf.Mix(
        sf.Multiply(
            sf.Mix(
                sf.Pcnt65(sf.MakeTriangle(sf.PhasedSineWave(length,freq,random.random()))),
                sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*2.0,random.random()))),
                sf.Pcnt15(sf.PhasedSineWave(length,freq*4.0,random.random()))
            ),
            sf.NumericShape((0,0),(48,1),(length,1))
        ),       
        sf.Multiply(
            sf.MakeSquare(sf.SineWave(length,freq*0.5)),
            sf.NumericShape((0,0.5),(48,0),(length,0))            
        ),
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def leadDiapason(length,freq):
    sig=sf.Mix(
        sf.Pcnt65(sf.MakeTriangle(sf.PhasedSineWave(length,freq,random.random()))),
        sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*2.0,random.random()))),
        sf.Pcnt15(sf.PhasedSineWave(length,freq*4.0,random.random())),
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def secondDiapason(length,freq):
    sig=sf.Mix(
        sf.MakeTriangle(sf.PhasedSineWave(length,freq,random.random())),
        sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*2.0,random.random()))),
        sf.Pcnt15(sf.PhasedSineWave(length,freq*4.0,random.random())),
        sf.Pcnt5(sf.PhasedSineWave(length,freq*8.0,random.random())),
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-20),(128,-26),(length,-20))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def grandBass(length,freq):
    sig=sf.Mix(
        sf.MixAt(
            [sf.Pcnt25(niceSaw(length,freq)),0],
            [sf.Pcnt50(sf.MakeTriangle(sf.PhasedSineWave(length,freq*0.501,random.random()))),32],
            [sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*0.252,random.random()))),64],
            [sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq/8.01,random.random()))),64]
        ),          
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-12),(128,-24),(length,-20))
        )
    )
    sig=sf.BesselLowPass(sig,freq*3.0,1)
    sig=sf.FixSize(polish(sig,freq))
    sig=pitchMove(sig)
    sig=sf.ButterworthLowPass(sig,freq*9.0,1)
    return sf.FixSize(sf.Clean(sig))

def doubleBombard(length,freq):
    sig=sf.Mix(
        sf.MixAt(
            [sf.Pcnt50(bombardPulse(length,freq)),0],
            [sf.Pcnt50(bombardPulse(length,freq*1.5)),10]
        ),          
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-10),(128,-24),(length,-20))
        )
    )
    return pitchMove(sig)

def trostPosaune(length,freq):
    b=posaunePulse(length,freq)
    b=sf.MixAt(
        [b,12],
        [
        sf.NumericShape(
            (0, -2.0),
            (4,  2.0),
            (12,-1.00),
            (20, 1.00),
            (28,-1.00),
            (length,0)
        ),0]
    )
    b=sf.RBJPeaking(b,freq*2,2,2)
    b=polish(b,freq)
    sig=sf.Mix(
        b
        ,
        sf.Pcnt20(sf.Multiply(+b,sf.WhiteNoise(length))),          
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-14),(128,-28),(length,-24))
        )
    )
    return pitchMove(sig)

def bombard(length,freq):
    b=sf.MixAt(
            [sf.Pcnt33(bombardPulse(length,freq)),0],
            [sf.Pcnt33(bombardPulse(length,freq)),10],
            [sf.Pcnt33(bombardPulse(length,freq)),20]
    )
    b=polish(b,freq)
    sig=sf.Mix(
        b
        ,
        sf.Pcnt10(sf.Multiply(+b,sf.WhiteNoise(length))),          
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-14),(128,-28),(length,-24))
        )
    )
    return pitchMove(sig)

def singleBombard(length,freq):
    sig=sf.Mix(
        sf.Pcnt33(bombardPulse(length,freq))
        ,          
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-16),(128,-24),(length,-20))
        )
    )
    return pitchMove(sig)

def ophicleide(length,freq):
    b=sf.MixAt(
            [sf.Pcnt10(ophicleidePulse(length,freq*0.25-1)),0],
            [sf.Pcnt20(ophicleidePulse(length,freq)),15],
            [sf.Pcnt20(ophicleidePulse(length,freq)),10],
            [sf.Pcnt20(ophicleidePulse(length,freq*2.0)),5],
            [sf.Pcnt20(ophicleidePulse(length,freq*3.0)),0]
    )
    b=sf.Mix(
        sf.Power(+b,2.0),
        sf.Pcnt10(sf.Raise(+b,2.0)),
        sf.Pcnt50(b)
    )
    b=polish(b,freq)
    sig=sf.Mix(
        sf.Pcnt90(b)
        ,
        sf.Pcnt10(sf.FixSize(sf.Multiply(+b,cleanNoise(length,freq*2.0)))),          
        sf.Multiply(
            cleanNoise(length,freq*0.5),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-22))
        )
    )
    return sig

def upperAccent(length,freq):
    return sf.FixSize(
        polish(
            sf.Power(
                polish(
                    sf.MakeTriangle(
                        sf.SineWave(length,freq)
                    ),
                    freq
                )
               ,2.0
            ),
            freq
        )
    )

def trostUpperAccent(length,freq):
    sig=sf.Mix(
        sf.Multiply(
            upperAccent(length,freq),
            sf.NumericShape((0,0),(48,1),(length,1))
        ),       
        sf.Multiply(
            sf.MakeSquare(sf.SineWave(length,freq*0.5)),
            sf.NumericShape((0,0.5),(48,0),(length,0))            
        ),
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )
    sig=sf.FixSize(polish(sig,freq))
    return pitchMove(sig)

def clarion(length,freq):
    s1=sf.MakeTriangle(sf.PhasedSineWave(length,freq,random.random()))
    s2=sf.MakeTriangle(sf.PhasedSineWave(length,freq*2.001,random.random()))
    s3=niceSaw(length,freq*4.002)
    s1=polish(s1,freq)
    s2=polish(s2,freq)
    s3=polish(s3,freq)
    
    sig=sf.Mix(
        sf.Pcnt70(s1),
        sf.Pcnt20(s2),
        sf.Pcnt10(s3),
        sf.Multiply(
            cleanNoise(length,freq*2.0),
            sf.SimpleShape((0,-60),(64,-20),(128,-36),(length,-36))
        )
    )

    sig=sf.FixSize(sf.Power(sig,10.0))
    sig=polish(sig,freq)
    sig=sf.BesselLowPass(sig,freq*6.0,2)
    return sf.FixSize(sf.Clean(sig))
    
def warmBass(length,freq):
    sig=sf.Mix(
        sf.FixSize(
            sf.Power(
                sf.Clean(
                    sf.MixAt(
                        [sf.Pcnt25(sf.MakeSquare  (sf.PhasedSineWave(length,freq      ,random.random()))),0],
                        [sf.Pcnt50(sf.MakeTriangle(sf.PhasedSineWave(length,freq*0.501,random.random()))),32],
                        [sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq*0.252,random.random()))),64],
                        [sf.Pcnt25(sf.MakeTriangle(sf.PhasedSineWave(length,freq/8.01,random.random()))),64]
                    )
                )
                ,1.25
            )
        ),      
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,-12),(128,-24),(length,-24))
        )
    )
    sh=sf.WhiteNoise(length)
    sh=sf.Multiply(sh,+sig)
    sig=sf.Mix(sig,sf.Pcnt5(sh))

    if freq<128:
        q=freq*6.0
    elif freq<256:
        q=freq*5
    else:
        q=freq*4.0
    sig=sf.BesselLowPass(sig,q,1)
    return pitchMove(sig)


def simpleOboe(length,freq):
    sig=sf.FixSize(
        sf.Power(
            sf.Clean(
                sf.Mix(
                    niceSaw(length,freq),
                    sf.PhasedSineWave(length,freq,random.random())
                )
            )
            ,
            1.5
        )
    )
    sig=polish(sig,freq)
    sig=sf.FixSize(sf.Power(sig,1.5))
    sig=polish(sig,freq)
    sig=sf.FixSize(sf.Power(sig,1.5))
    sig=polish(sig,freq)
    sig=sf.FixSize(sig)
      
    sig=sf.RBJPeaking(sig,freq*5,0.5,5)
    sig=sf.RBJPeaking(sig,freq*7,1,5)
    sig=sf.RBJNotch  (sig,freq*2,0.5,1)
    sig=sf.Clean(sig)
    
    sig=sf.Mix(
        sf.FixSize(sig),
        sf.Multiply(
            cleanNoise(length,freq*9.0),
            sf.SimpleShape((0,-60),(64,-20),(128,-24),(length,-24))
        )
    )

    sig=sf.ButterworthLowPass (sig,freq*9,4)
    sig=polish(sig,freq)
    return sf.FixSize(sig)

def muteOboe(length,freq):
    sig=sf.FixSize(
        sf.Power(
            sf.Clean(
                sf.Mix(
                    niceSaw(length,freq),
                    sf.PhasedSineWave(length,freq,random.random())
                )
            )
            ,
            1.5
        )
    )
    sig=polish(sig,freq)
    sig=sf.FixSize(sf.Power(sig,1.5))
    sig=polish(sig,freq)
    sig=sf.FixSize(sf.Power(sig,1.5))
    sig=polish(sig,freq)
    sig=sf.FixSize(sig)      

    sig=sf.RBJPeaking(sig,freq*5,0.5,5)
    sig=sf.RBJPeaking(sig,freq*7,1,5)
    sig=sf.RBJNotch  (sig,freq*2,0.5,1)
    sig=sf.Clean(sig)
    
    sig=sf.Mix(
        sf.FixSize(sig),
        sf.Multiply(
            cleanNoise(length,freq*9.0),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-20))
        )
    )

    sig=polish(sig,freq)
    sig=sf.BesselLowPass (sig,freq*4,1)
    osig=+sig
    osig=sf.BesselHighPass(sig,freq*4,2)
    sig=sf.BesselLowPass (sig,freq*6,1)
    sig=sf.BesselLowPass (sig,freq*8,4)
    sig=sf.Mix(sig,osig)
    return sf.FixSize(sf.Clean(sig))
    
def orchestralOboe(length,freq):
    vox=makeSimpleBase(length,freq,0.25)
    vox=polish(vox,freq)
    vox=sf.FixSize(sf.Power(vox,1.5))
    vox=polish(vox,freq)
    vox=sf.FixSize(sf.Power(vox,1.5))
    vox=polish(vox,freq)
    vox=sf.RBJPeaking(vox,freq*5,0.5,5)
    vox=sf.RBJPeaking(vox,freq*7,1,5)
    vox=sf.RBJNotch  (vox,freq*2,0.5,1)
    vox=sf.FixSize(vox) 
    res=512*math.ceil(float(freq)/256.0)
    vox=sf.Mix(
        sf.RBJPeaking(+vox,res    ,1,8),
        sf.RBJPeaking( vox,res*4.0,1,8),
    )
    vox=sf.ButterworthLowPass(vox,freq*4,4) 
    vox=sf.FixSize(vox)
    nos=sf.Multiply(
        +vox,
        sf.Multiply(
            cleanNoise(length,freq),
            sf.SimpleShape((0,-60),(64,0),(128,-9),(length,-9))
        )
    )
    vox=sf.Mix(
        vox,
        sf.Pcnt10(sf.FixSize(nos))
    )
    vox=polish(vox,freq)
    return sf.FixSize(vox)

def trostOrchestralOboe(length,freq):
    start=sf.Multiply(
            sf.Mix(
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.500)),2.0)),
                sf.FixSize(sf.Power(sf.MakeSawTooth(sf.SineWave(length,freq*0.123)),2.0))
            ),
            sf.NumericShape((0,3.0),(32,0),(length,0))            
    )
    start=polish(start,freq*0.5)
    sig=sf.Mix(orchestralOboe(length,freq),sf.FixSize(start))
    return sf.FixSize(polish(sig,freq))

def richReed(length,freq):
    s1=bombardPulse(length,freq*1.000)
    s2=nicePulse(length,freq+1)
    s3=nicePulse(length,freq-1.5)
    s1=polish(s1,freq)
    s2=polish(s2,freq)
    s3=polish(s3,freq)
    
    sig=sf.Mix(
        sf.Pcnt70(s1),
        sf.Pcnt20(s2),
        sf.Pcnt10(s3),
        sf.Multiply(
            cleanNoise(length,freq*2.0),
            sf.SimpleShape((0,-60),(64,-20),(128,-24),(length,-24))
        )
    )

    sig=sf.FixSize(sig)
    sig=polish(sig,freq)
    return sf.FixSize(sig)

def reed(length,freq):
    s1=nicePulse(length,freq*1.000)
    s1=polish(s1,freq)
    
    sig=sf.Mix(
        s1,
        sf.Multiply(
            cleanNoise(length,freq*2.0),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-20))
        )
    )

    sig=sf.FixSize(sig)
    sig=polish(sig,freq)
    return sf.FixSize(sig)

def stoppedReed(length,freq):
    s1=stoppedPulse(length,freq*1.000)
    s1=polish(s1,freq)
    
    sig=sf.Mix(
        s1,
        sf.Multiply(
            cleanNoise(length,freq*2.0),
            sf.SimpleShape((0,-60),(64,-16),(128,-20),(length,-20))
        )
    )

    sig=sf.FixSize(sig)
    sig=sf.Mix(
        sf.Pcnt10(sf.Clean(sf.Saturate(+sig))),
        sig
    )
    sig=polish(sig,freq)
    return sf.FixSize(sig)

def trumpet(length,freq):
    if length>256:
        sig1=trumpetBase(length,freq,-0.25)
        sig2=trumpetBase(length,freq, 0.25)
        env1=sf.NumericShape((0,0),(256,1),(length,1))
        env2=sf.NumericShape((0,1),(256,0),(length,0))
        sig1=sf.Multiply(sig1,env1)
        sig2=sf.Multiply(sig2,env2)
        sig=sf.Mix(sig1,sig2)
    else:
        sig=trumpetBase(length,freq,-0.25)
    
    sig=sf.FixSize(sig)
    sig=polish(sig,freq)

    sig=sf.Mix(
        sig,
        sf.Multiply(
            cleanNoise(length,freq*1.0),
            sf.SimpleShape((0,-60),(32,-22),(64,-60),(length,-90))
        )
    )
        
    sig=sf.FixSize(sig)
    sig=polish(sig,freq)
    return sf.FixSize(sig)

###############################################################################
# END VOICES
###############################################################################
