import os
#sf.SetSampleRate(64000)
path="scripts/python/Bach-Large-Organ"
execfile(path+"/algorithms.sy")
execfile(path+"/generators.sy")
execfile(path+"/voices.sy")
execfile(path+"/note-formation.sy")

notesl=[]
notesr=[]
notes=[]

def postProcess():
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Mix phase 1 done: ",count,atl,atr
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    print "Mix phase 2 done"
    notesl.append([tnl,0])
    notesr.append([tnr,0])

def postProcessTremolate(rate=3.5,magnitude=0.25):
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Trem phase 1 done: ",count,atl,atr
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    tnl=tremolate(tnl,rate,magnitude)
    tnr=tremolate(tnr,rate,magnitude)
    print "Trem phase 2 done"
    notesl.append([tnl,0])
    notesr.append([tnr,0])

def postProcessEcho():
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Echo phase 1 done: ",count,atl,atr
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    tnl=echoDivision(tnl)
    tnr=echoDivision(tnr)
    print "Echo phase 2 done"
    notesl.append([tnl,0])
    notesr.append([tnr,0])

#######################################
# Timing configuration and running midi
#######################################

#midis=sf.ReadMidiFile("temp/bwv605gm.mid")
midis=sf.ReadMidiFile("temp/Little Book Of Organ/bwv606gm.mid")

signature   =     4.0/4.0
bpm         =     100 * signature
beat        =     (60000.0 / (bpm * 192.0))
length      =     1.25
base        =     8.1757989156
temperament =     WerckmeisterIII
#temperament =     Equal
count       =      0.0
timeStart   =      0.0
timeEnd     =   1000.0 * 60.0 * 5.0
swapAll     =    False

print "Initial  Beat: ",beat
beat=setLengthMidi(midis,beat,length)
print "Computed Beat: ",beat

midi=longAsMidi(midis[1],beat,512)
midi=fixVelocityMidi(midi)
midi=dampVelocity(midi,80,0.75)
doMidi(voice=orchestralOboe,vCorrect=0.50,flatEnv=True)
postProcessTremolate(rate=4.5,magnitude=0.1)
doMidi(voice=orchestralOboe,vCorrect=0.25,pitchAdd=2.5,flatEnv=True,pitchShift=3.0)
postProcessTremolate(rate=3.0,magnitude=0.1)

midi=midis[2]
midi=fixVelocityMidi(midi)
midi=dampVelocity(midi,80,0.75)
doMidi(voice=string,vCorrect=1.0,flatEnv=True)
postProcess()

midi=legatoMidi(midis[3],beat,128)
midi=fixVelocityMidi(midi)
doMidi(voice=trostPosaune,vCorrect=1.0,pitchShift=0.5,flatEnv=True,rawBass=True)
postProcess()
midi=delayMidi(midis[3],beat,64)
midi=fixVelocityMidi(midi)
doMidi(voice=secondDiapason, vCorrect=0.5,flatEnv=True)
postProcess()

print "Mixing"
left =finalMix(notesl)
right=finalMix(notesr)
sf.WriteFile32((left,right),"temp/temp.wav")
