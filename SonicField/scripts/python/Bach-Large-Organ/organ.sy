#########
# Setup #
#########

import os
path="scripts/python/Bach-Large-Organ"
execfile(path+"/algorithms.sy")
execfile(path+"/generators.sy")
execfile(path+"/voices.sy")
execfile(path+"/note-formation.sy")

notesl = []
notesr = []
notes  = []
execfile(path+"/post.sy")

########################################
# Timing configuration and temperament #
########################################

midis=sf.ReadMidiFile("temp/Little Book Of Organ/bwv618gm.mid")
#midis=sf.ReadMidiFile("temp/bwv615.mid")

# Length of full piece
#======================
length      =    3.0

# How much to play
#==================
minutes     =   100.0

# Set to True if run out of memory
#==================================
swapAll     =   True

# Temperament
#=============
temperament =     WerckmeisterIII

# Do Not Change
#===============
beat        =      4.0
base        =      8.1757989156
count       =      0.0
timeStart   =      0.0
timeEnd     =  60000.0 * minutes
beat        =  setLengthMidi(midis,beat,length)

###########
# Voicing #
###########

# Repair overlaps?
midis=repareOverlapMidis(midis)
newMidis=[]
for m in midis:
    newMidis.append(fixVelocityMidi(m))
midis=newMidis

global midi,index
index=0

def chA():
    global midi,index
    print "##### Channel A #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=leadDiapason,vCorrect=1.0,flatEnv=False,bend=True)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.75)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=orchestralOboe,vCorrect=0.35,flatEnv=True,bend=True,pan=0.2)
    postProcessTremolate(rate=3.5)
    doMidi(voice=orchestralOboe,vCorrect=0.35,flatEnv=True,bend=True,pan=0.8)
    postProcessTremolate(rate=4.5)

def chL():
    global midi,index
    print "##### Channel O #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=leadDiapason,vCorrect=1.0,flatEnv=False,bend=True)
    postProcess()

    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.86)
    doMidi(voice=orchestralOboe,vCorrect=0.50,flatEnv=True,bend=True,pan=0.2)
    postProcess()
    doMidi(voice=orchestralOboe,vCorrect=0.50,flatEnv=True,bend=True,pan=0.8,pitchAdd=2.0)
    postProcess()

def chO():
    global midi,index
    print "##### Channel O #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=orchestralOboe,vCorrect=0.50,flatEnv=False,bend=True)
    postProcessEcho()
    doMidi(voice=orchestralOboe,vCorrect=0.50,flatEnv=False,bend=True,pitchAdd=2.0)
    postProcessEcho()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.86)
    doMidi(voice=orchestralOboe,vCorrect=0.33,flatEnv=True,bend=True,pan=0.5,pitchAdd=2.0)
    postProcessEcho()
    doMidi(voice=orchestralOboe,vCorrect=0.33,flatEnv=True,bend=True,pan=0.2)
    postProcessTremolate(rate=3.5)
    doMidi(voice=orchestralOboe,vCorrect=0.33,flatEnv=True,bend=True,pan=0.8)
    postProcessTremolate(rate=4.5)

def chAS():
    global midi,index
    print "##### Channel AS #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=leadDiapason,vCorrect=1.0,flatEnv=False,bend=True)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.75)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=string,vCorrect=0.35,flatEnv=True,bend=True,pitchAdd=2.0)
    postProcess()
    doMidi(voice=string,vCorrect=0.35,flatEnv=True,bend=True)
    postProcess()

def chAC():
    global midi,index
    print "##### Channel AS #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=clarion,vCorrect=1.0,flatEnv=False,bend=True)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=clarion,vCorrect=0.5,flatEnv=False,bend=True,pitchAdd=2.0)
    postProcess()
    doMidi(voice=clarion,vCorrect=0.5,flatEnv=True,bend=True)
    postProcess()

def chAST():
    global midi,index
    print "##### Channel AS #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=stoppedReed,vCorrect=1.0,flatEnv=False,bend=True)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=stoppedReed,vCorrect=0.5,flatEnv=False,bend=True,pitchAdd=2.0)
    postProcess()
    doMidi(voice=stoppedReed,vCorrect=0.5,flatEnv=True,bend=True)
    postProcess()

def chB():
    global midi,index
    print "##### Channel B #####"
    index+=1
    midi=legatoMidi(midis[index],beat,128)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=viola,vCorrect=1.0,flatEnv=False)
    postProcess()

def chC():
    global midi,index
    print "##### Channel C #####"
    index+=1
    midi=legatoMidi(midis[index],beat,128)
    midi=dampVelocity(midi,80,0.75)
    doMidi(voice=secondDiapason,vCorrect=1.0,flatEnv=True)
    postProcess() 

def chP():
    global midi,index
    print "##### Channel P #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,32,1.25)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.86)
    midi=legatoMidi(midis[index],beat,64)
    doMidi(voice=secondDiapason,vCorrect=0.6,flatEnv=True)
    postProcess() 

    midi=longAsMidi(midis[index],beat,512)
    midi=dampVelocity(midi,32,1.25)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    midi=legatoMidi(midis[index],beat,256)
    doMidi(voice=secondDiapason,vCorrect=0.3,flatEnv=True,pan=0.75)
    postProcessEcho() 
    doMidi(voice=secondDiapason,vCorrect=0.3,flatEnv=True,pan=0.25,pitchAdd=2.0)
    postProcessEcho() 

def chT():
    global midi,index
    print "##### Channel T #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=dampVelocity(midi,32,1.25)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.86)
    midi=legatoMidi(midis[index],beat,64)
    doMidi(voice=stoppedReed,vCorrect=1.0,flatEnv=True)
    postProcess() 

    midi=longAsMidi(midis[index],beat,512)
    midi=dampVelocity(midi,32,1.25)
    midi=dampVelocity(midi,68,0.86)
    midi=dampVelocity(midi,80,0.75)
    midi=legatoMidi(midis[index],beat,256)
    doMidi(voice=stoppedReed,vCorrect=0.5,flatEnv=True,pan=0.75)
    postProcessEcho() 
    doMidi(voice=stoppedReed,vCorrect=0.5,flatEnv=True,pan=0.25,pitchAdd=2.0)
    postProcessEcho() 
    
def chD():
    global midi,index
    print "##### Channel D #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    doMidi(voice=trostPosaune,vCorrect=0.9,flatEnv=True,pure=True,pan=0.3,pitchShift=0.5)
    postProcess()
    doMidi(voice=trostPosaune,vCorrect=0.5,flatEnv=True,pure=True,pan=0.7,pitchAdd=3.0)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pure=False,pitchShift=4.0)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,256)
    doMidi(voice=trostPosaune,vCorrect=0.5,flatEnv=True,pure=True,pan=0.3,pitchAdd=2.0)
    postProcess()
    doMidi(voice=trostPosaune,vCorrect=0.9,flatEnv=True,pure=True,pan=0.7,pitchShift=0.5)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pure=False,pitchShift=4.0)
    postProcess()

def chDR():
    global midi,index
    print "##### Channel D #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    doMidi(voice=trostPosaune,vCorrect=0.9,flatEnv=True,pure=True,pan=0.3,pitchShift=0.5,rawBass=True)
    postProcess()
    doMidi(voice=trostPosaune,vCorrect=0.5,flatEnv=True,pure=True,pan=0.7,pitchAdd=3.0,rawBass=True)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pure=False,pitchShift=4.0,rawBass=True)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,256)
    doMidi(voice=trostPosaune,vCorrect=0.5,flatEnv=True,pure=True,pan=0.3,pitchAdd=2.0,rawBass=True)
    postProcess()
    doMidi(voice=trostPosaune,vCorrect=0.9,flatEnv=True,pure=True,pan=0.7,pitchShift=0.5,rawBass=True)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pure=False,pitchShift=4.0,rawBass=True)
    postProcess()

def chDB():
    global midi,index
    print "##### Channel DB #####"
    index+=1
    midi=shorterThanMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,128)
    doMidi(voice=bombard,vCorrect=1.2,flatEnv=True,pure=True,pan=0.3,pitchShift=0.5,rawBass=True)
    postProcess()
    doMidi(voice=bombard,vCorrect=0.7,flatEnv=True,pure=True,pan=0.7,pitchAdd=3.0)
    postProcess()
    
    midi=longAsMidi(midis[index],beat,512)
    midi=legatoMidi(midi,beat,256)
    doMidi(voice=bombard,vCorrect=0.7,flatEnv=True,pure=True,pan=0.3,pitchAdd=2.0,rawBass=True)
    postProcess()
    doMidi(voice=bombard,vCorrect=1.2,flatEnv=True,pure=True,pan=0.7,pitchShift=0.5)
    postProcess()

def chDW():
    global midi,index
    print "##### Channel DW #####"
    index+=1
    midi=legatoMidi(midis[index],beat,128)
    doMidi(voice=warmBass,vCorrect=1.2,flatEnv=True)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pitchShift=4.0)
    postProcess()

def chDST():
    global midi,index
    print "##### Channel DST #####"
    index+=1
    midi=legatoMidi(midis[index],beat,128)
    doMidi(voice=stoppedReed,vCorrect=0.6,flatEnv=True)
    postProcess()
    doMidi(voice=stoppedReed,vCorrect=0.6,flatEnv=True,pitchShift=0.5)
    postProcess()
    doMidi(voice=upperAccent,vCorrect=0.2,flatEnv=True,pitchShift=4.0)
    postProcess()

##### Non Incrementing Accent Voices #####

def chS():
    global midi,index
    print "##### Channel S #####"
    midi=legatoMidi(midis[index],beat,192)
    doMidi(voice=trostUpperAccent,vCorrect=0.25,flatEnv=True,pitchShift=0.25,pitchAdd=2.5,pan=0.25,pure=True)
    postProcess()
    doMidi(voice=trostUpperAccent,vCorrect=0.25,flatEnv=True,pitchShift=0.25,pan=0.75,pure=True)
    postProcess()


def chUT():
    global midi,index
    print "##### Channel UT #####"
    doMidi(voice=stoppedReed,vCorrect=0.05,flatEnv=True,pitchShift=3.0,pan=0.0)
    postProcessTremolate(rate=3.7) 
    doMidi(voice=stoppedReed,vCorrect=0.05,flatEnv=True,pitchShift=3.0,pan=1.0)
    postProcessTremolate(rate=3.3) 

def chST():
    global midi,index
    print "##### Channel SS #####"
    midi=legatoMidi(midis[index],beat,192)
    doMidi(voice=stoppedReed,vCorrect=0.25,flatEnv=True,pitchShift=0.25,pitchAdd=2.5,pan=0.25,pure=True)
    postProcess()
    doMidi(voice=stoppedReed,vCorrect=0.25,flatEnv=True,pitchShift=0.25,pan=0.75,pure=True)
    postProcess()

##################
# Which Channels #
##################

doChannels=['o','p','dw','s']
while len(doChannels):    
    ch=doChannels.pop(0)
    if ch == 'a':
        chA()
    if ch == 'o':
        chO()
    if ch == 'as':
        chAS()
    if ch == 'ac':
        chAC()
    if ch == 'ast':
        chAST()
    if ch == 'b':
        chB()
    if ch == 'c':
        chC()
    if ch == 't':
        chT()
    if ch == 'p':
        chP()
    if ch == 'd':
        chD()
    if ch == 'db':
        chDB()
    if ch == 'dr':
        chDR()
    if ch == 'dw':
        chDW()
    if ch == 'dst':
        chDST()
    if ch == 'ut':
        chUT()
    if ch == 's':
        chS()
    if ch == 'st':
        chST()

#######################
# Final mix and write #
#######################
print "Mixing"
left =finalMix(notesl)
right=finalMix(notesr)
sf.WriteSignal(+left, "temp/dry-l.sig")
sf.WriteSignal(+right,"temp/dry-r.sig")
left  = sf.Normalise(left)
right = sf.Normalise(right)
sf.WriteFile32((left,right),"temp/temp.wav")
