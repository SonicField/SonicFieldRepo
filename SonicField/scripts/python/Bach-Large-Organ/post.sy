######################
# Channel By Channel #
# Mix mix/prcessing  #
######################

global signalName
signalName=0

def postProcess():
    global signalName
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Mix phase 1 done: ",count,atl,atr
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    sf.WriteSignal(tnl,"temp/l-"+str(signalName));
    sf.WriteSignal(tnr,"temp/r-"+str(signalName));
    print "Mix phase 2 done"
    signalName+=1

def postProcessTremolate(rate=3.5,magnitude=0.25):
    global signalName
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Trem phase 1 done: ",count
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    tnl=tremolate(tnl,rate,magnitude)
    tnr=tremolate(tnr,rate,magnitude)
    print "Trem phase 2 done"
    sf.WriteSignal(tnl,"temp/l-"+str(signalName));
    sf.WriteSignal(tnr,"temp/r-"+str(signalName));
    print "Trem phase 3 done"
    signalName+=1

def postProcessEcho():
    global signalName
    count=0
    tnsl=[]
    tnsr=[]
    
    for note in notes:
        nlr,atl,atr=note
        print "Echo phase 1 done: ",count
        notel,noter=nlr
        tnsl.append([notel,atl])
        tnsr.append([noter,atr])
        count+=1
    tnl=mix(tnsl)
    tnr=mix(tnsr)
    print "Echo phase 2 done"
    tnl=echoDivision(tnl)
    tnr=echoDivision(tnr)
    sf.WriteSignal(tnl,"temp/l-"+str(signalName));
    sf.WriteSignal(tnr,"temp/r-"+str(signalName));
    print "Echo phase 3 done"
    signalName+=1

def doFinalMix():
    global signalName
    left =sf.Silence(1)
    right=sf.Silence(1)
    for x in range(0,signalName):
        left =sf.Mix(left ,sf.ReadSignal("temp/l-"+str(x)))
        right=sf.Mix(right,sf.ReadSignal("temp/r-"+str(x)))
    left =sf.Finalise(left)
    right=sf.Finalise(right)
    return left,right
    