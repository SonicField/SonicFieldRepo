#########
# Setup #
#########

import os
from organ.Player import *
from organ.Post   import *
from organ.Voices import \
    vox_humana_femail_soprano_ah,\
    vox_humana_femail_soprano_a,\
    vox_humana_femail_soprano_ma,\
    upper_accent,\
    reed,\
    string,\
    sweet_flute,\
    folk_flute,\
    shawm,\
    bright_plucked_glass,\
    plucked_glass,\
    folk_clarinet,\
    folk_basson,\
    tuned_wind
    
#sf.SetSampleRate(192000)

def sing(midi_in,beat,temperament,velocity):
    l=200.0
    midi1=long_as_midi(midi_in,beat,l)
    midi1=legato_midi(midi1,beat,64)
    midi2=shorter_than_midi(midi_in,beat,l)
    midi2=legato_midi(midi2,beat,32)
    print len(midi1),len(midi2)
    notes1 = play_midi(midi1,beat,temperament,voice=vox_humana_femail_soprano_ah, bend=True,mellow=True,velocity_correct=velocity*1.0,flat_env=False, quick_factor=1.0,pan=0.2)
    notes2 = play_midi(midi2,beat,temperament,voice=vox_humana_femail_soprano_ma, bend=True,mellow=True,velocity_correct=velocity*1.0,flat_env=False, quick_factor=1.5,pan=0.8)
    left1,right1 = post_process(notes1)
    left2,right2 = post_process(notes2)
    return mix(left1,left2),mix(right1,right2)

def strange_sing(midi_in,beat,temperament,velocity):
    midi=delay_midi(midi_in,beat,256)
    notes1=play_midi(
        midi,
        beat,
        temperament,
        voice=vox_humana_femail_soprano_ah,
        bend=False,
        mellow=False,
        velocity_correct=velocity*1.0,
        flat_env=False,
        quick_factor=2.0,
        pan=0.5
    )
    left1,right1 = post_process(notes1)
    sf.WriteFile32((+left1,+right1),"temp/sung.wav")
    notes2=play_midi(
        midi_in,
        beat,
        temperament,
        voice=tuned_wind,
        bend=False,
        mellow=True,
        velocity_correct=velocity*0.15,
        flat_env=True,
        quick_factor=0.5,
        pitch_shift=0.25,
        pan=0.8
    )
    left2,right2 = post_process(notes2)
    sf.WriteFile32((+left2,+right2),"temp/flute1.wav")
    notes3=play_midi(
        midi_in,
        beat,
        temperament,
        voice=tuned_wind,
        bend=False,
        mellow=True,
        velocity_correct=velocity*0.15,
        flat_env=True,
        quick_factor=0.5,
        pitch_shift=0.5,
        pan=0.2
    )
    left3,right3 = post_process(notes3)
    sf.WriteFile32((+left3,+right3),"temp/flute2.wav")

    return mix(left1,left2,left3),mix(right1,right2,right3)

def quick_flute(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi1,beat,temperament,voice=folk_flute, bend=True,mellow=False,velocity_correct=velocity*0.5,flat_env=False, quick_factor=1.0,pan=-1)
    notes2=play_midi(midi2,beat,temperament,voice=tuned_wind, bend=True,mellow=False,velocity_correct=velocity*0.5,flat_env=False, quick_factor=1.0,pan=-1)
    left1,right1 = post_process(notes1)
    left2,right2 = post_process(notes2)
    return mix(left1,left2),mix(right1,right2)
    
def slow_flute(midi_in,beat,temperament,velocity):
    midi=delay_midi(midi_in,beat,256)
    notes1=play_midi(
        midi,
        beat,
        temperament,
        voice=folk_flute,
        bend=False,
        mellow=False,
        velocity_correct=velocity*1.0,
        flat_env=False,
        quick_factor=2.0,
        pan=0.5
    )
    notes2=play_midi(
        midi_in,
        beat,
        temperament,
        voice=tuned_wind,
        bend=False,
        mellow=True,
        velocity_correct=velocity*0.15,
        flat_env=True,
        quick_factor=0.5,
        pitch_shift=0.25,
        pan=0.8
    )
    notes3=play_midi(
        midi_in,
        beat,
        temperament,
        voice=tuned_wind,
        bend=False,
        mellow=True,
        velocity_correct=velocity*0.15,
        flat_env=True,
        quick_factor=0.5,
        pitch_shift=0.5,
        pan=0.2
    )
    left1,right1 = post_process(notes1)
    left2,right2 = post_process(notes2)
    left3,right3 = post_process(notes3)
    return mix(left1,left2,left3),mix(right1,right2,right3)

def first_lead(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi_in,beat,temperament,voice=folk_flute, bend=True,mellow=True, velocity_correct=velocity*1.0,flat_env=False, quick_factor=0.5,pan=-1)
    return post_process(notes1)

def third_lead(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi_in,beat,temperament,voice=tuned_wind, bend=True,mellow=False, velocity_correct=velocity*1.0,flat_env=False, quick_factor=0.5,pan=-1)
    return post_process(notes1)

def bright_lead(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi_in,beat,temperament,voice=plucked_glass, bend=True,decay=1500,mellow=False,velocity_correct=velocity*1.0,flat_env=False, quick_factor=0.5,pan=-1)
    midi=scatter_midi(midi_in,beat,128)
    notes2=play_midi(midi,beat,temperament,voice=bright_plucked_glass, bend=True,decay=1250,mellow=False,velocity_correct=velocity*0.33,flat_env=True,quick_factor=0.5,pan=0.20,pitch_shift=4.0,pitch_add=1)
    midi=scatter_midi(midi_in,beat,128)
    notes3=play_midi(midi,beat,temperament,voice=plucked_glass,decay=5000,bend=True,mellow=False,velocity_correct=velocity*0.2,flat_env=True,quick_factor=1.0,pan=0.80,pitch_add=-1)

    left1,right1=post_process(notes1)
    left2,right2=post_process(notes2)
    left3,right3=post_process(notes3)
    return mix(left1,left2,left3),mix(right1,right2,right3)
    
def second_lead(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi_in,beat,temperament,voice=plucked_glass, bend=True,decay=1500,mellow=False,velocity_correct=velocity*1.0,flat_env=False, quick_factor=0.1,pan=-1)
    midi=scatter_midi(midi_in,beat,128)
    notes2=play_midi(midi,beat,temperament,voice=bright_plucked_glass, bend=True,decay=1250,mellow=True,velocity_correct=velocity*0.25,flat_env=True,quick_factor=0.1,pan=0.20,pitch_shift=2.0,pitch_add=1)
    midi=scatter_midi(midi_in,beat,128)
    notes3=play_midi(midi,beat,temperament,voice=plucked_glass,decay=5000,bend=True,mellow=True,velocity_correct=velocity*0.2,flat_env=False,quick_factor=0.5,pan=0.80,pitch_add=-1)

    left1,right1=post_process(notes1)
    left2,right2=post_process(notes2)
    left3,right3=post_process(notes3)
    return mix(left1,left2,left3),mix(right1,right2,right3)

def first_bass(midi_in,beat,temperament,velocity):
    notes1=play_midi(midi_in,beat,temperament,voice=folk_clarinet, bend=False,mellow=False, velocity_correct=velocity*1.0,flat_env=True, quick_factor=0.5,pan=0.25)
    notes2=play_midi(midi_in,beat,temperament,voice=folk_clarinet, bend=False,mellow=False, velocity_correct=velocity*1.0,flat_env=True, quick_factor=0.5,pan=0.75)

    left1,right1 = post_process_echo(notes1)
    left2,right2 = post_process_echo(notes2)
    return mix(left1,left2),mix(right1,right2)
        
def first_harmony(midi_in,beat,temperament,velocity):
    midi=scatter_midi(midi_in,beat,32)
    notes1=play_midi(midi,beat,temperament,voice=folk_basson,bend=True,mellow=False,velocity_correct=velocity*1.0,flat_env=True, quick_factor=1.0,pan=-0.7)

    return post_process(notes1)

notes  = []
########################################
# Timing configuration and temperament #
########################################

#midis=read_midi_file("temp/pontchar.mid")
midis=read_midi_file("temp/input.mid")

# Length of full piece
#======================
length = 3.5

# Temperament
#=============
#temperament = werckmeisterIII
#temperament = just_intonation
temperament = bach_lehman
#temperament = equal_temperament

# Do Not Change
#===============
beat        =  set_length_midi(midis,length)

###########
# Voicing #
###########

# Repair overlaps?
midis=repare_overlap_midis(midis)

left,right = bright_lead(midis[1],beat,temperament,1.0)
left,right=do_final_mix(left,right)
sf.WriteFile32((left,right),"temp/temp.wav")

'''
# Produce sounds

left1,right1 = first_lead (midis[1],beat,just_intonation,1.0)
left2,right2 = second_lead(midis[2],beat,just_intonation,1.0)
left3,right3 = third_lead (midis[6],beat,just_intonation,1.0)
left=mix(left1,left2,left3)
right=mix(right1,right2,right3)
left,right=do_final_mix(left,right)

sf.WriteSignal(+left, "temp/dry-l-a.sig")
sf.WriteSignal(+right,"temp/dry-r-s.sig")
sf.WriteFile32((left,right),"temp/temp-a.wav")

left,right = first_harmony(midis[3],beat,just_intonation,1.0)
left,right=do_final_mix(left,right)

sf.WriteSignal(+left, "temp/dry-l-b.sig")
sf.WriteSignal(+right,"temp/dry-r-b.sig")
sf.WriteFile32((left,right),"temp/temp-b.wav")

left,right = first_bass(midis[4],beat,just_intonation,1.0)
left,right=do_final_mix(left,right)

sf.WriteSignal(+left, "temp/dry-l-c.sig")
sf.WriteSignal(+right,"temp/dry-r-c.sig")
sf.WriteFile32((left,right),"temp/temp-c.wav")

'''